// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shapes.proto

#include "shapes.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_shapes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConvexHullShapePacket_Face_shapes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_shapes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_base_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Matrix4x4Packet_base_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_shapes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShapeBasePacket_shapes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_base_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vector3Packet_base_5ftypes_2eproto;
namespace PhysicsTelemetry {
class ShapeBasePacketDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShapeBasePacket> _instance;
} _ShapeBasePacket_default_instance_;
class ObbShapePacketDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObbShapePacket> _instance;
} _ObbShapePacket_default_instance_;
class TetrahedronShapePacketDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TetrahedronShapePacket> _instance;
} _TetrahedronShapePacket_default_instance_;
class ConvexHullShapePacket_VertexDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConvexHullShapePacket_Vertex> _instance;
} _ConvexHullShapePacket_Vertex_default_instance_;
class ConvexHullShapePacket_FaceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConvexHullShapePacket_Face> _instance;
} _ConvexHullShapePacket_Face_default_instance_;
class ConvexHullShapePacketDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConvexHullShapePacket> _instance;
} _ConvexHullShapePacket_default_instance_;
class ShapeCreatedMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShapeCreatedMessage> _instance;
} _ShapeCreatedMessage_default_instance_;
class ShapeChangedMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ShapeChangedMessage> _instance;
} _ShapeChangedMessage_default_instance_;
}  // namespace PhysicsTelemetry
static void InitDefaultsscc_info_ConvexHullShapePacket_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ConvexHullShapePacket_default_instance_;
    new (ptr) ::PhysicsTelemetry::ConvexHullShapePacket();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ConvexHullShapePacket::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ConvexHullShapePacket_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ConvexHullShapePacket_shapes_2eproto}, {
      &scc_info_ShapeBasePacket_shapes_2eproto.base,
      &scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto.base,
      &scc_info_ConvexHullShapePacket_Face_shapes_2eproto.base,}};

static void InitDefaultsscc_info_ConvexHullShapePacket_Face_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ConvexHullShapePacket_Face_default_instance_;
    new (ptr) ::PhysicsTelemetry::ConvexHullShapePacket_Face();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ConvexHullShapePacket_Face::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConvexHullShapePacket_Face_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConvexHullShapePacket_Face_shapes_2eproto}, {}};

static void InitDefaultsscc_info_ConvexHullShapePacket_Vertex_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ConvexHullShapePacket_Vertex_default_instance_;
    new (ptr) ::PhysicsTelemetry::ConvexHullShapePacket_Vertex();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ConvexHullShapePacket_Vertex::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConvexHullShapePacket_Vertex_shapes_2eproto}, {
      &scc_info_Vector3Packet_base_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ObbShapePacket_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ObbShapePacket_default_instance_;
    new (ptr) ::PhysicsTelemetry::ObbShapePacket();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ObbShapePacket::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ObbShapePacket_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ObbShapePacket_shapes_2eproto}, {
      &scc_info_ShapeBasePacket_shapes_2eproto.base,
      &scc_info_Vector3Packet_base_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ShapeBasePacket_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ShapeBasePacket_default_instance_;
    new (ptr) ::PhysicsTelemetry::ShapeBasePacket();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ShapeBasePacket::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ShapeBasePacket_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ShapeBasePacket_shapes_2eproto}, {
      &scc_info_Matrix4x4Packet_base_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_ShapeChangedMessage_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ShapeChangedMessage_default_instance_;
    new (ptr) ::PhysicsTelemetry::ShapeChangedMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ShapeChangedMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShapeChangedMessage_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShapeChangedMessage_shapes_2eproto}, {}};

static void InitDefaultsscc_info_ShapeCreatedMessage_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_ShapeCreatedMessage_default_instance_;
    new (ptr) ::PhysicsTelemetry::ShapeCreatedMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::ShapeCreatedMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ShapeCreatedMessage_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ShapeCreatedMessage_shapes_2eproto}, {}};

static void InitDefaultsscc_info_TetrahedronShapePacket_shapes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PhysicsTelemetry::_TetrahedronShapePacket_default_instance_;
    new (ptr) ::PhysicsTelemetry::TetrahedronShapePacket();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PhysicsTelemetry::TetrahedronShapePacket::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TetrahedronShapePacket_shapes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TetrahedronShapePacket_shapes_2eproto}, {
      &scc_info_ShapeBasePacket_shapes_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_shapes_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_shapes_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_shapes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_shapes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeBasePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeBasePacket, id_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeBasePacket, haslocalmatrix_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeBasePacket, localmatrix_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeBasePacket, shapetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ObbShapePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ObbShapePacket, base_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ObbShapePacket, halfextents_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::TetrahedronShapePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::TetrahedronShapePacket, base_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Vertex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Vertex, position_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Vertex, normal_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Face, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Face, vert0_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Face, vert1_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket_Face, vert2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket, base_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket, vertices_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ConvexHullShapePacket, faces_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeCreatedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeCreatedMessage, shapetype_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeCreatedMessage, shapesize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeChangedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeChangedMessage, shapetype_),
  PROTOBUF_FIELD_OFFSET(::PhysicsTelemetry::ShapeChangedMessage, shapesize_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PhysicsTelemetry::ShapeBasePacket)},
  { 9, -1, sizeof(::PhysicsTelemetry::ObbShapePacket)},
  { 16, -1, sizeof(::PhysicsTelemetry::TetrahedronShapePacket)},
  { 22, -1, sizeof(::PhysicsTelemetry::ConvexHullShapePacket_Vertex)},
  { 29, -1, sizeof(::PhysicsTelemetry::ConvexHullShapePacket_Face)},
  { 37, -1, sizeof(::PhysicsTelemetry::ConvexHullShapePacket)},
  { 45, -1, sizeof(::PhysicsTelemetry::ShapeCreatedMessage)},
  { 52, -1, sizeof(::PhysicsTelemetry::ShapeChangedMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ShapeBasePacket_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ObbShapePacket_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_TetrahedronShapePacket_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ConvexHullShapePacket_Vertex_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ConvexHullShapePacket_Face_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ConvexHullShapePacket_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ShapeCreatedMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PhysicsTelemetry::_ShapeChangedMessage_default_instance_),
};

const char descriptor_table_protodef_shapes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014shapes.proto\022\020PhysicsTelemetry\032\020base_t"
  "ypes.proto\"\235\001\n\017ShapeBasePacket\022\n\n\002Id\030\001 \001"
  "(\r\022\026\n\016hasLocalMatrix\030\002 \001(\010\0226\n\013localMatri"
  "x\030\003 \001(\0132!.PhysicsTelemetry.Matrix4x4Pack"
  "et\022.\n\tshapeType\030\004 \001(\0162\033.PhysicsTelemetry"
  ".ShapeType\"w\n\016ObbShapePacket\022/\n\004base\030\001 \001"
  "(\0132!.PhysicsTelemetry.ShapeBasePacket\0224\n"
  "\013halfExtents\030\002 \001(\0132\037.PhysicsTelemetry.Ve"
  "ctor3Packet\"I\n\026TetrahedronShapePacket\022/\n"
  "\004base\030\001 \001(\0132!.PhysicsTelemetry.ShapeBase"
  "Packet\"\352\002\n\025ConvexHullShapePacket\022/\n\004base"
  "\030\001 \001(\0132!.PhysicsTelemetry.ShapeBasePacke"
  "t\022@\n\010vertices\030\002 \003(\0132..PhysicsTelemetry.C"
  "onvexHullShapePacket.Vertex\022;\n\005faces\030\003 \003"
  "(\0132,.PhysicsTelemetry.ConvexHullShapePac"
  "ket.Face\032l\n\006Vertex\0221\n\010position\030\001 \001(\0132\037.P"
  "hysicsTelemetry.Vector3Packet\022/\n\006normal\030"
  "\002 \001(\0132\037.PhysicsTelemetry.Vector3Packet\0323"
  "\n\004Face\022\r\n\005vert0\030\001 \001(\005\022\r\n\005vert1\030\002 \001(\005\022\r\n\005"
  "vert2\030\003 \001(\005\"X\n\023ShapeCreatedMessage\022.\n\tsh"
  "apeType\030\001 \001(\0162\033.PhysicsTelemetry.ShapeTy"
  "pe\022\021\n\tshapeSize\030\002 \001(\005\"X\n\023ShapeChangedMes"
  "sage\022.\n\tshapeType\030\001 \001(\0162\033.PhysicsTelemet"
  "ry.ShapeType\022\021\n\tshapeSize\030\002 \001(\005*K\n\tShape"
  "Type\022\007\n\003OBB\020\000\022\n\n\006Sphere\020\001\022\010\n\004Cone\020\002\022\016\n\nC"
  "onvexHull\020\003\022\017\n\013Tetrahedron\020\004B\037\252\002\034Physics"
  ".Telemetry.Serialisedb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_shapes_2eproto_deps[1] = {
  &::descriptor_table_base_5ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_shapes_2eproto_sccs[8] = {
  &scc_info_ConvexHullShapePacket_shapes_2eproto.base,
  &scc_info_ConvexHullShapePacket_Face_shapes_2eproto.base,
  &scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto.base,
  &scc_info_ObbShapePacket_shapes_2eproto.base,
  &scc_info_ShapeBasePacket_shapes_2eproto.base,
  &scc_info_ShapeChangedMessage_shapes_2eproto.base,
  &scc_info_ShapeCreatedMessage_shapes_2eproto.base,
  &scc_info_TetrahedronShapePacket_shapes_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_shapes_2eproto_once;
static bool descriptor_table_shapes_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_shapes_2eproto = {
  &descriptor_table_shapes_2eproto_initialized, descriptor_table_protodef_shapes_2eproto, "shapes.proto", 1069,
  &descriptor_table_shapes_2eproto_once, descriptor_table_shapes_2eproto_sccs, descriptor_table_shapes_2eproto_deps, 8, 1,
  schemas, file_default_instances, TableStruct_shapes_2eproto::offsets,
  file_level_metadata_shapes_2eproto, 8, file_level_enum_descriptors_shapes_2eproto, file_level_service_descriptors_shapes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_shapes_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_shapes_2eproto), true);
namespace PhysicsTelemetry {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShapeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_shapes_2eproto);
  return file_level_enum_descriptors_shapes_2eproto[0];
}
bool ShapeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ShapeBasePacket::InitAsDefaultInstance() {
  ::PhysicsTelemetry::_ShapeBasePacket_default_instance_._instance.get_mutable()->localmatrix_ = const_cast< ::PhysicsTelemetry::Matrix4x4Packet*>(
      ::PhysicsTelemetry::Matrix4x4Packet::internal_default_instance());
}
class ShapeBasePacket::_Internal {
 public:
  static const ::PhysicsTelemetry::Matrix4x4Packet& localmatrix(const ShapeBasePacket* msg);
};

const ::PhysicsTelemetry::Matrix4x4Packet&
ShapeBasePacket::_Internal::localmatrix(const ShapeBasePacket* msg) {
  return *msg->localmatrix_;
}
void ShapeBasePacket::clear_localmatrix() {
  if (GetArenaNoVirtual() == nullptr && localmatrix_ != nullptr) {
    delete localmatrix_;
  }
  localmatrix_ = nullptr;
}
ShapeBasePacket::ShapeBasePacket()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ShapeBasePacket)
}
ShapeBasePacket::ShapeBasePacket(const ShapeBasePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_localmatrix()) {
    localmatrix_ = new ::PhysicsTelemetry::Matrix4x4Packet(*from.localmatrix_);
  } else {
    localmatrix_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&shapetype_) -
    reinterpret_cast<char*>(&id_)) + sizeof(shapetype_));
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ShapeBasePacket)
}

void ShapeBasePacket::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ShapeBasePacket_shapes_2eproto.base);
  ::memset(&localmatrix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapetype_) -
      reinterpret_cast<char*>(&localmatrix_)) + sizeof(shapetype_));
}

ShapeBasePacket::~ShapeBasePacket() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ShapeBasePacket)
  SharedDtor();
}

void ShapeBasePacket::SharedDtor() {
  if (this != internal_default_instance()) delete localmatrix_;
}

void ShapeBasePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShapeBasePacket& ShapeBasePacket::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShapeBasePacket_shapes_2eproto.base);
  return *internal_default_instance();
}


void ShapeBasePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ShapeBasePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && localmatrix_ != nullptr) {
    delete localmatrix_;
  }
  localmatrix_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapetype_) -
      reinterpret_cast<char*>(&id_)) + sizeof(shapetype_));
  _internal_metadata_.Clear();
}

const char* ShapeBasePacket::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool hasLocalMatrix = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          haslocalmatrix_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PhysicsTelemetry.Matrix4x4Packet localMatrix = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_localmatrix(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PhysicsTelemetry.ShapeType shapeType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_shapetype(static_cast<::PhysicsTelemetry::ShapeType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShapeBasePacket::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ShapeBasePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // bool hasLocalMatrix = 2;
  if (this->haslocalmatrix() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_haslocalmatrix(), target);
  }

  // .PhysicsTelemetry.Matrix4x4Packet localMatrix = 3;
  if (this->has_localmatrix()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::localmatrix(this), target, stream);
  }

  // .PhysicsTelemetry.ShapeType shapeType = 4;
  if (this->shapetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_shapetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ShapeBasePacket)
  return target;
}

size_t ShapeBasePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ShapeBasePacket)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.Matrix4x4Packet localMatrix = 3;
  if (this->has_localmatrix()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *localmatrix_);
  }

  // uint32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // bool hasLocalMatrix = 2;
  if (this->haslocalmatrix() != 0) {
    total_size += 1 + 1;
  }

  // .PhysicsTelemetry.ShapeType shapeType = 4;
  if (this->shapetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_shapetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShapeBasePacket::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ShapeBasePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const ShapeBasePacket* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShapeBasePacket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ShapeBasePacket)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ShapeBasePacket)
    MergeFrom(*source);
  }
}

void ShapeBasePacket::MergeFrom(const ShapeBasePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ShapeBasePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_localmatrix()) {
    _internal_mutable_localmatrix()->::PhysicsTelemetry::Matrix4x4Packet::MergeFrom(from._internal_localmatrix());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.haslocalmatrix() != 0) {
    _internal_set_haslocalmatrix(from._internal_haslocalmatrix());
  }
  if (from.shapetype() != 0) {
    _internal_set_shapetype(from._internal_shapetype());
  }
}

void ShapeBasePacket::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ShapeBasePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeBasePacket::CopyFrom(const ShapeBasePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ShapeBasePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeBasePacket::IsInitialized() const {
  return true;
}

void ShapeBasePacket::InternalSwap(ShapeBasePacket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(localmatrix_, other->localmatrix_);
  swap(id_, other->id_);
  swap(haslocalmatrix_, other->haslocalmatrix_);
  swap(shapetype_, other->shapetype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShapeBasePacket::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObbShapePacket::InitAsDefaultInstance() {
  ::PhysicsTelemetry::_ObbShapePacket_default_instance_._instance.get_mutable()->base_ = const_cast< ::PhysicsTelemetry::ShapeBasePacket*>(
      ::PhysicsTelemetry::ShapeBasePacket::internal_default_instance());
  ::PhysicsTelemetry::_ObbShapePacket_default_instance_._instance.get_mutable()->halfextents_ = const_cast< ::PhysicsTelemetry::Vector3Packet*>(
      ::PhysicsTelemetry::Vector3Packet::internal_default_instance());
}
class ObbShapePacket::_Internal {
 public:
  static const ::PhysicsTelemetry::ShapeBasePacket& base(const ObbShapePacket* msg);
  static const ::PhysicsTelemetry::Vector3Packet& halfextents(const ObbShapePacket* msg);
};

const ::PhysicsTelemetry::ShapeBasePacket&
ObbShapePacket::_Internal::base(const ObbShapePacket* msg) {
  return *msg->base_;
}
const ::PhysicsTelemetry::Vector3Packet&
ObbShapePacket::_Internal::halfextents(const ObbShapePacket* msg) {
  return *msg->halfextents_;
}
void ObbShapePacket::clear_halfextents() {
  if (GetArenaNoVirtual() == nullptr && halfextents_ != nullptr) {
    delete halfextents_;
  }
  halfextents_ = nullptr;
}
ObbShapePacket::ObbShapePacket()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ObbShapePacket)
}
ObbShapePacket::ObbShapePacket(const ObbShapePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::PhysicsTelemetry::ShapeBasePacket(*from.base_);
  } else {
    base_ = nullptr;
  }
  if (from._internal_has_halfextents()) {
    halfextents_ = new ::PhysicsTelemetry::Vector3Packet(*from.halfextents_);
  } else {
    halfextents_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ObbShapePacket)
}

void ObbShapePacket::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObbShapePacket_shapes_2eproto.base);
  ::memset(&base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&halfextents_) -
      reinterpret_cast<char*>(&base_)) + sizeof(halfextents_));
}

ObbShapePacket::~ObbShapePacket() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ObbShapePacket)
  SharedDtor();
}

void ObbShapePacket::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
  if (this != internal_default_instance()) delete halfextents_;
}

void ObbShapePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObbShapePacket& ObbShapePacket::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObbShapePacket_shapes_2eproto.base);
  return *internal_default_instance();
}


void ObbShapePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ObbShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && halfextents_ != nullptr) {
    delete halfextents_;
  }
  halfextents_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ObbShapePacket::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.ShapeBasePacket base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PhysicsTelemetry.Vector3Packet halfExtents = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_halfextents(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObbShapePacket::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ObbShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::base(this), target, stream);
  }

  // .PhysicsTelemetry.Vector3Packet halfExtents = 2;
  if (this->has_halfextents()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::halfextents(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ObbShapePacket)
  return target;
}

size_t ObbShapePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ObbShapePacket)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  // .PhysicsTelemetry.Vector3Packet halfExtents = 2;
  if (this->has_halfextents()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *halfextents_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObbShapePacket::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ObbShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const ObbShapePacket* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObbShapePacket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ObbShapePacket)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ObbShapePacket)
    MergeFrom(*source);
  }
}

void ObbShapePacket::MergeFrom(const ObbShapePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ObbShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    _internal_mutable_base()->::PhysicsTelemetry::ShapeBasePacket::MergeFrom(from._internal_base());
  }
  if (from.has_halfextents()) {
    _internal_mutable_halfextents()->::PhysicsTelemetry::Vector3Packet::MergeFrom(from._internal_halfextents());
  }
}

void ObbShapePacket::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ObbShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObbShapePacket::CopyFrom(const ObbShapePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ObbShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObbShapePacket::IsInitialized() const {
  return true;
}

void ObbShapePacket::InternalSwap(ObbShapePacket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(base_, other->base_);
  swap(halfextents_, other->halfextents_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObbShapePacket::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TetrahedronShapePacket::InitAsDefaultInstance() {
  ::PhysicsTelemetry::_TetrahedronShapePacket_default_instance_._instance.get_mutable()->base_ = const_cast< ::PhysicsTelemetry::ShapeBasePacket*>(
      ::PhysicsTelemetry::ShapeBasePacket::internal_default_instance());
}
class TetrahedronShapePacket::_Internal {
 public:
  static const ::PhysicsTelemetry::ShapeBasePacket& base(const TetrahedronShapePacket* msg);
};

const ::PhysicsTelemetry::ShapeBasePacket&
TetrahedronShapePacket::_Internal::base(const TetrahedronShapePacket* msg) {
  return *msg->base_;
}
TetrahedronShapePacket::TetrahedronShapePacket()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.TetrahedronShapePacket)
}
TetrahedronShapePacket::TetrahedronShapePacket(const TetrahedronShapePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::PhysicsTelemetry::ShapeBasePacket(*from.base_);
  } else {
    base_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.TetrahedronShapePacket)
}

void TetrahedronShapePacket::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TetrahedronShapePacket_shapes_2eproto.base);
  base_ = nullptr;
}

TetrahedronShapePacket::~TetrahedronShapePacket() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.TetrahedronShapePacket)
  SharedDtor();
}

void TetrahedronShapePacket::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
}

void TetrahedronShapePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TetrahedronShapePacket& TetrahedronShapePacket::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TetrahedronShapePacket_shapes_2eproto.base);
  return *internal_default_instance();
}


void TetrahedronShapePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.TetrahedronShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  _internal_metadata_.Clear();
}

const char* TetrahedronShapePacket::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.ShapeBasePacket base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TetrahedronShapePacket::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.TetrahedronShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::base(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.TetrahedronShapePacket)
  return target;
}

size_t TetrahedronShapePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.TetrahedronShapePacket)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TetrahedronShapePacket::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.TetrahedronShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const TetrahedronShapePacket* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TetrahedronShapePacket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.TetrahedronShapePacket)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.TetrahedronShapePacket)
    MergeFrom(*source);
  }
}

void TetrahedronShapePacket::MergeFrom(const TetrahedronShapePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.TetrahedronShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_base()) {
    _internal_mutable_base()->::PhysicsTelemetry::ShapeBasePacket::MergeFrom(from._internal_base());
  }
}

void TetrahedronShapePacket::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.TetrahedronShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TetrahedronShapePacket::CopyFrom(const TetrahedronShapePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.TetrahedronShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TetrahedronShapePacket::IsInitialized() const {
  return true;
}

void TetrahedronShapePacket::InternalSwap(TetrahedronShapePacket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(base_, other->base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TetrahedronShapePacket::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConvexHullShapePacket_Vertex::InitAsDefaultInstance() {
  ::PhysicsTelemetry::_ConvexHullShapePacket_Vertex_default_instance_._instance.get_mutable()->position_ = const_cast< ::PhysicsTelemetry::Vector3Packet*>(
      ::PhysicsTelemetry::Vector3Packet::internal_default_instance());
  ::PhysicsTelemetry::_ConvexHullShapePacket_Vertex_default_instance_._instance.get_mutable()->normal_ = const_cast< ::PhysicsTelemetry::Vector3Packet*>(
      ::PhysicsTelemetry::Vector3Packet::internal_default_instance());
}
class ConvexHullShapePacket_Vertex::_Internal {
 public:
  static const ::PhysicsTelemetry::Vector3Packet& position(const ConvexHullShapePacket_Vertex* msg);
  static const ::PhysicsTelemetry::Vector3Packet& normal(const ConvexHullShapePacket_Vertex* msg);
};

const ::PhysicsTelemetry::Vector3Packet&
ConvexHullShapePacket_Vertex::_Internal::position(const ConvexHullShapePacket_Vertex* msg) {
  return *msg->position_;
}
const ::PhysicsTelemetry::Vector3Packet&
ConvexHullShapePacket_Vertex::_Internal::normal(const ConvexHullShapePacket_Vertex* msg) {
  return *msg->normal_;
}
void ConvexHullShapePacket_Vertex::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
void ConvexHullShapePacket_Vertex::clear_normal() {
  if (GetArenaNoVirtual() == nullptr && normal_ != nullptr) {
    delete normal_;
  }
  normal_ = nullptr;
}
ConvexHullShapePacket_Vertex::ConvexHullShapePacket_Vertex()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
}
ConvexHullShapePacket_Vertex::ConvexHullShapePacket_Vertex(const ConvexHullShapePacket_Vertex& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::PhysicsTelemetry::Vector3Packet(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_normal()) {
    normal_ = new ::PhysicsTelemetry::Vector3Packet(*from.normal_);
  } else {
    normal_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
}

void ConvexHullShapePacket_Vertex::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&normal_) -
      reinterpret_cast<char*>(&position_)) + sizeof(normal_));
}

ConvexHullShapePacket_Vertex::~ConvexHullShapePacket_Vertex() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  SharedDtor();
}

void ConvexHullShapePacket_Vertex::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete normal_;
}

void ConvexHullShapePacket_Vertex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvexHullShapePacket_Vertex& ConvexHullShapePacket_Vertex::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConvexHullShapePacket_Vertex_shapes_2eproto.base);
  return *internal_default_instance();
}


void ConvexHullShapePacket_Vertex::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && normal_ != nullptr) {
    delete normal_;
  }
  normal_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ConvexHullShapePacket_Vertex::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.Vector3Packet position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PhysicsTelemetry.Vector3Packet normal = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_normal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConvexHullShapePacket_Vertex::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.Vector3Packet position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  // .PhysicsTelemetry.Vector3Packet normal = 2;
  if (this->has_normal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::normal(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  return target;
}

size_t ConvexHullShapePacket_Vertex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.Vector3Packet position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .PhysicsTelemetry.Vector3Packet normal = 2;
  if (this->has_normal()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *normal_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvexHullShapePacket_Vertex::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvexHullShapePacket_Vertex* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConvexHullShapePacket_Vertex>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
    MergeFrom(*source);
  }
}

void ConvexHullShapePacket_Vertex::MergeFrom(const ConvexHullShapePacket_Vertex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::PhysicsTelemetry::Vector3Packet::MergeFrom(from._internal_position());
  }
  if (from.has_normal()) {
    _internal_mutable_normal()->::PhysicsTelemetry::Vector3Packet::MergeFrom(from._internal_normal());
  }
}

void ConvexHullShapePacket_Vertex::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvexHullShapePacket_Vertex::CopyFrom(const ConvexHullShapePacket_Vertex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvexHullShapePacket_Vertex::IsInitialized() const {
  return true;
}

void ConvexHullShapePacket_Vertex::InternalSwap(ConvexHullShapePacket_Vertex* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(normal_, other->normal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConvexHullShapePacket_Vertex::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConvexHullShapePacket_Face::InitAsDefaultInstance() {
}
class ConvexHullShapePacket_Face::_Internal {
 public:
};

ConvexHullShapePacket_Face::ConvexHullShapePacket_Face()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ConvexHullShapePacket.Face)
}
ConvexHullShapePacket_Face::ConvexHullShapePacket_Face(const ConvexHullShapePacket_Face& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vert0_, &from.vert0_,
    static_cast<size_t>(reinterpret_cast<char*>(&vert2_) -
    reinterpret_cast<char*>(&vert0_)) + sizeof(vert2_));
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ConvexHullShapePacket.Face)
}

void ConvexHullShapePacket_Face::SharedCtor() {
  ::memset(&vert0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vert2_) -
      reinterpret_cast<char*>(&vert0_)) + sizeof(vert2_));
}

ConvexHullShapePacket_Face::~ConvexHullShapePacket_Face() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ConvexHullShapePacket.Face)
  SharedDtor();
}

void ConvexHullShapePacket_Face::SharedDtor() {
}

void ConvexHullShapePacket_Face::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvexHullShapePacket_Face& ConvexHullShapePacket_Face::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConvexHullShapePacket_Face_shapes_2eproto.base);
  return *internal_default_instance();
}


void ConvexHullShapePacket_Face::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vert0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vert2_) -
      reinterpret_cast<char*>(&vert0_)) + sizeof(vert2_));
  _internal_metadata_.Clear();
}

const char* ConvexHullShapePacket_Face::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 vert0 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          vert0_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vert1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          vert1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 vert2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          vert2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConvexHullShapePacket_Face::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 vert0 = 1;
  if (this->vert0() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_vert0(), target);
  }

  // int32 vert1 = 2;
  if (this->vert1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_vert1(), target);
  }

  // int32 vert2 = 3;
  if (this->vert2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_vert2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ConvexHullShapePacket.Face)
  return target;
}

size_t ConvexHullShapePacket_Face::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 vert0 = 1;
  if (this->vert0() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vert0());
  }

  // int32 vert1 = 2;
  if (this->vert1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vert1());
  }

  // int32 vert2 = 3;
  if (this->vert2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vert2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvexHullShapePacket_Face::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvexHullShapePacket_Face* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConvexHullShapePacket_Face>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ConvexHullShapePacket.Face)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ConvexHullShapePacket.Face)
    MergeFrom(*source);
  }
}

void ConvexHullShapePacket_Face::MergeFrom(const ConvexHullShapePacket_Face& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vert0() != 0) {
    _internal_set_vert0(from._internal_vert0());
  }
  if (from.vert1() != 0) {
    _internal_set_vert1(from._internal_vert1());
  }
  if (from.vert2() != 0) {
    _internal_set_vert2(from._internal_vert2());
  }
}

void ConvexHullShapePacket_Face::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvexHullShapePacket_Face::CopyFrom(const ConvexHullShapePacket_Face& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket.Face)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvexHullShapePacket_Face::IsInitialized() const {
  return true;
}

void ConvexHullShapePacket_Face::InternalSwap(ConvexHullShapePacket_Face* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(vert0_, other->vert0_);
  swap(vert1_, other->vert1_);
  swap(vert2_, other->vert2_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConvexHullShapePacket_Face::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConvexHullShapePacket::InitAsDefaultInstance() {
  ::PhysicsTelemetry::_ConvexHullShapePacket_default_instance_._instance.get_mutable()->base_ = const_cast< ::PhysicsTelemetry::ShapeBasePacket*>(
      ::PhysicsTelemetry::ShapeBasePacket::internal_default_instance());
}
class ConvexHullShapePacket::_Internal {
 public:
  static const ::PhysicsTelemetry::ShapeBasePacket& base(const ConvexHullShapePacket* msg);
};

const ::PhysicsTelemetry::ShapeBasePacket&
ConvexHullShapePacket::_Internal::base(const ConvexHullShapePacket* msg) {
  return *msg->base_;
}
ConvexHullShapePacket::ConvexHullShapePacket()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ConvexHullShapePacket)
}
ConvexHullShapePacket::ConvexHullShapePacket(const ConvexHullShapePacket& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      vertices_(from.vertices_),
      faces_(from.faces_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_base()) {
    base_ = new ::PhysicsTelemetry::ShapeBasePacket(*from.base_);
  } else {
    base_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ConvexHullShapePacket)
}

void ConvexHullShapePacket::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConvexHullShapePacket_shapes_2eproto.base);
  base_ = nullptr;
}

ConvexHullShapePacket::~ConvexHullShapePacket() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ConvexHullShapePacket)
  SharedDtor();
}

void ConvexHullShapePacket::SharedDtor() {
  if (this != internal_default_instance()) delete base_;
}

void ConvexHullShapePacket::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConvexHullShapePacket& ConvexHullShapePacket::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConvexHullShapePacket_shapes_2eproto.base);
  return *internal_default_instance();
}


void ConvexHullShapePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ConvexHullShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vertices_.Clear();
  faces_.Clear();
  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ConvexHullShapePacket::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.ShapeBasePacket base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PhysicsTelemetry.ConvexHullShapePacket.Vertex vertices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_vertices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .PhysicsTelemetry.ConvexHullShapePacket.Face faces = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_faces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConvexHullShapePacket::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ConvexHullShapePacket)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::base(this), target, stream);
  }

  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Vertex vertices = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_vertices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_vertices(i), target, stream);
  }

  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Face faces = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_faces_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_faces(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ConvexHullShapePacket)
  return target;
}

size_t ConvexHullShapePacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ConvexHullShapePacket)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Vertex vertices = 2;
  total_size += 1UL * this->_internal_vertices_size();
  for (const auto& msg : this->vertices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Face faces = 3;
  total_size += 1UL * this->_internal_faces_size();
  for (const auto& msg : this->faces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  if (this->has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *base_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConvexHullShapePacket::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  const ConvexHullShapePacket* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConvexHullShapePacket>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ConvexHullShapePacket)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ConvexHullShapePacket)
    MergeFrom(*source);
  }
}

void ConvexHullShapePacket::MergeFrom(const ConvexHullShapePacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ConvexHullShapePacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vertices_.MergeFrom(from.vertices_);
  faces_.MergeFrom(from.faces_);
  if (from.has_base()) {
    _internal_mutable_base()->::PhysicsTelemetry::ShapeBasePacket::MergeFrom(from._internal_base());
  }
}

void ConvexHullShapePacket::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConvexHullShapePacket::CopyFrom(const ConvexHullShapePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ConvexHullShapePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConvexHullShapePacket::IsInitialized() const {
  return true;
}

void ConvexHullShapePacket::InternalSwap(ConvexHullShapePacket* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  vertices_.InternalSwap(&other->vertices_);
  faces_.InternalSwap(&other->faces_);
  swap(base_, other->base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConvexHullShapePacket::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShapeCreatedMessage::InitAsDefaultInstance() {
}
class ShapeCreatedMessage::_Internal {
 public:
};

ShapeCreatedMessage::ShapeCreatedMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ShapeCreatedMessage)
}
ShapeCreatedMessage::ShapeCreatedMessage(const ShapeCreatedMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shapetype_, &from.shapetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&shapesize_) -
    reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ShapeCreatedMessage)
}

void ShapeCreatedMessage::SharedCtor() {
  ::memset(&shapetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapesize_) -
      reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
}

ShapeCreatedMessage::~ShapeCreatedMessage() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ShapeCreatedMessage)
  SharedDtor();
}

void ShapeCreatedMessage::SharedDtor() {
}

void ShapeCreatedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShapeCreatedMessage& ShapeCreatedMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShapeCreatedMessage_shapes_2eproto.base);
  return *internal_default_instance();
}


void ShapeCreatedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ShapeCreatedMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shapetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapesize_) -
      reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
  _internal_metadata_.Clear();
}

const char* ShapeCreatedMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.ShapeType shapeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_shapetype(static_cast<::PhysicsTelemetry::ShapeType>(val));
        } else goto handle_unusual;
        continue;
      // int32 shapeSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          shapesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShapeCreatedMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ShapeCreatedMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeType shapeType = 1;
  if (this->shapetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_shapetype(), target);
  }

  // int32 shapeSize = 2;
  if (this->shapesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_shapesize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ShapeCreatedMessage)
  return target;
}

size_t ShapeCreatedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ShapeCreatedMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeType shapeType = 1;
  if (this->shapetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_shapetype());
  }

  // int32 shapeSize = 2;
  if (this->shapesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shapesize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShapeCreatedMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ShapeCreatedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ShapeCreatedMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShapeCreatedMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ShapeCreatedMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ShapeCreatedMessage)
    MergeFrom(*source);
  }
}

void ShapeCreatedMessage::MergeFrom(const ShapeCreatedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ShapeCreatedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shapetype() != 0) {
    _internal_set_shapetype(from._internal_shapetype());
  }
  if (from.shapesize() != 0) {
    _internal_set_shapesize(from._internal_shapesize());
  }
}

void ShapeCreatedMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ShapeCreatedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeCreatedMessage::CopyFrom(const ShapeCreatedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ShapeCreatedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeCreatedMessage::IsInitialized() const {
  return true;
}

void ShapeCreatedMessage::InternalSwap(ShapeCreatedMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(shapetype_, other->shapetype_);
  swap(shapesize_, other->shapesize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShapeCreatedMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ShapeChangedMessage::InitAsDefaultInstance() {
}
class ShapeChangedMessage::_Internal {
 public:
};

ShapeChangedMessage::ShapeChangedMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PhysicsTelemetry.ShapeChangedMessage)
}
ShapeChangedMessage::ShapeChangedMessage(const ShapeChangedMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shapetype_, &from.shapetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&shapesize_) -
    reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
  // @@protoc_insertion_point(copy_constructor:PhysicsTelemetry.ShapeChangedMessage)
}

void ShapeChangedMessage::SharedCtor() {
  ::memset(&shapetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapesize_) -
      reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
}

ShapeChangedMessage::~ShapeChangedMessage() {
  // @@protoc_insertion_point(destructor:PhysicsTelemetry.ShapeChangedMessage)
  SharedDtor();
}

void ShapeChangedMessage::SharedDtor() {
}

void ShapeChangedMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ShapeChangedMessage& ShapeChangedMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ShapeChangedMessage_shapes_2eproto.base);
  return *internal_default_instance();
}


void ShapeChangedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PhysicsTelemetry.ShapeChangedMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shapetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shapesize_) -
      reinterpret_cast<char*>(&shapetype_)) + sizeof(shapesize_));
  _internal_metadata_.Clear();
}

const char* ShapeChangedMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PhysicsTelemetry.ShapeType shapeType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_shapetype(static_cast<::PhysicsTelemetry::ShapeType>(val));
        } else goto handle_unusual;
        continue;
      // int32 shapeSize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          shapesize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ShapeChangedMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PhysicsTelemetry.ShapeChangedMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeType shapeType = 1;
  if (this->shapetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_shapetype(), target);
  }

  // int32 shapeSize = 2;
  if (this->shapesize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_shapesize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PhysicsTelemetry.ShapeChangedMessage)
  return target;
}

size_t ShapeChangedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PhysicsTelemetry.ShapeChangedMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PhysicsTelemetry.ShapeType shapeType = 1;
  if (this->shapetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_shapetype());
  }

  // int32 shapeSize = 2;
  if (this->shapesize() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_shapesize());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShapeChangedMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PhysicsTelemetry.ShapeChangedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ShapeChangedMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ShapeChangedMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PhysicsTelemetry.ShapeChangedMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PhysicsTelemetry.ShapeChangedMessage)
    MergeFrom(*source);
  }
}

void ShapeChangedMessage::MergeFrom(const ShapeChangedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PhysicsTelemetry.ShapeChangedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shapetype() != 0) {
    _internal_set_shapetype(from._internal_shapetype());
  }
  if (from.shapesize() != 0) {
    _internal_set_shapesize(from._internal_shapesize());
  }
}

void ShapeChangedMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PhysicsTelemetry.ShapeChangedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShapeChangedMessage::CopyFrom(const ShapeChangedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PhysicsTelemetry.ShapeChangedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShapeChangedMessage::IsInitialized() const {
  return true;
}

void ShapeChangedMessage::InternalSwap(ShapeChangedMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(shapetype_, other->shapetype_);
  swap(shapesize_, other->shapesize_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShapeChangedMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace PhysicsTelemetry
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ShapeBasePacket* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ShapeBasePacket >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ShapeBasePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ObbShapePacket* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ObbShapePacket >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ObbShapePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::TetrahedronShapePacket* Arena::CreateMaybeMessage< ::PhysicsTelemetry::TetrahedronShapePacket >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::TetrahedronShapePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ConvexHullShapePacket_Face* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ConvexHullShapePacket_Face >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ConvexHullShapePacket_Face >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ConvexHullShapePacket* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ConvexHullShapePacket >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ConvexHullShapePacket >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ShapeCreatedMessage* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ShapeCreatedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ShapeCreatedMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::PhysicsTelemetry::ShapeChangedMessage* Arena::CreateMaybeMessage< ::PhysicsTelemetry::ShapeChangedMessage >(Arena* arena) {
  return Arena::CreateInternal< ::PhysicsTelemetry::ShapeChangedMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
