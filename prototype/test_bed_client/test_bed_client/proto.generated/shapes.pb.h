// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shapes.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_shapes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_shapes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_types.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_shapes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_shapes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_shapes_2eproto;
namespace PhysicsTelemetry {
class ConvexHullShapePacket;
class ConvexHullShapePacketDefaultTypeInternal;
extern ConvexHullShapePacketDefaultTypeInternal _ConvexHullShapePacket_default_instance_;
class ConvexHullShapePacket_Face;
class ConvexHullShapePacket_FaceDefaultTypeInternal;
extern ConvexHullShapePacket_FaceDefaultTypeInternal _ConvexHullShapePacket_Face_default_instance_;
class ConvexHullShapePacket_Vertex;
class ConvexHullShapePacket_VertexDefaultTypeInternal;
extern ConvexHullShapePacket_VertexDefaultTypeInternal _ConvexHullShapePacket_Vertex_default_instance_;
class ObbShapePacket;
class ObbShapePacketDefaultTypeInternal;
extern ObbShapePacketDefaultTypeInternal _ObbShapePacket_default_instance_;
class ShapeBasePacket;
class ShapeBasePacketDefaultTypeInternal;
extern ShapeBasePacketDefaultTypeInternal _ShapeBasePacket_default_instance_;
class ShapeChangedMessage;
class ShapeChangedMessageDefaultTypeInternal;
extern ShapeChangedMessageDefaultTypeInternal _ShapeChangedMessage_default_instance_;
class ShapeCreatedMessage;
class ShapeCreatedMessageDefaultTypeInternal;
extern ShapeCreatedMessageDefaultTypeInternal _ShapeCreatedMessage_default_instance_;
class TetrahedronShapePacket;
class TetrahedronShapePacketDefaultTypeInternal;
extern TetrahedronShapePacketDefaultTypeInternal _TetrahedronShapePacket_default_instance_;
}  // namespace PhysicsTelemetry
PROTOBUF_NAMESPACE_OPEN
template<> ::PhysicsTelemetry::ConvexHullShapePacket* Arena::CreateMaybeMessage<::PhysicsTelemetry::ConvexHullShapePacket>(Arena*);
template<> ::PhysicsTelemetry::ConvexHullShapePacket_Face* Arena::CreateMaybeMessage<::PhysicsTelemetry::ConvexHullShapePacket_Face>(Arena*);
template<> ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* Arena::CreateMaybeMessage<::PhysicsTelemetry::ConvexHullShapePacket_Vertex>(Arena*);
template<> ::PhysicsTelemetry::ObbShapePacket* Arena::CreateMaybeMessage<::PhysicsTelemetry::ObbShapePacket>(Arena*);
template<> ::PhysicsTelemetry::ShapeBasePacket* Arena::CreateMaybeMessage<::PhysicsTelemetry::ShapeBasePacket>(Arena*);
template<> ::PhysicsTelemetry::ShapeChangedMessage* Arena::CreateMaybeMessage<::PhysicsTelemetry::ShapeChangedMessage>(Arena*);
template<> ::PhysicsTelemetry::ShapeCreatedMessage* Arena::CreateMaybeMessage<::PhysicsTelemetry::ShapeCreatedMessage>(Arena*);
template<> ::PhysicsTelemetry::TetrahedronShapePacket* Arena::CreateMaybeMessage<::PhysicsTelemetry::TetrahedronShapePacket>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace PhysicsTelemetry {

enum ShapeTypePacket : int {
  Obb = 0,
  Sphere = 1,
  Cone = 2,
  ConvexHull = 3,
  Tetrahedron = 4,
  ShapeTypePacket_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ShapeTypePacket_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ShapeTypePacket_IsValid(int value);
constexpr ShapeTypePacket ShapeTypePacket_MIN = Obb;
constexpr ShapeTypePacket ShapeTypePacket_MAX = Tetrahedron;
constexpr int ShapeTypePacket_ARRAYSIZE = ShapeTypePacket_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShapeTypePacket_descriptor();
template<typename T>
inline const std::string& ShapeTypePacket_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ShapeTypePacket>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ShapeTypePacket_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ShapeTypePacket_descriptor(), enum_t_value);
}
inline bool ShapeTypePacket_Parse(
    const std::string& name, ShapeTypePacket* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ShapeTypePacket>(
    ShapeTypePacket_descriptor(), name, value);
}
// ===================================================================

class ShapeBasePacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ShapeBasePacket) */ {
 public:
  ShapeBasePacket();
  virtual ~ShapeBasePacket();

  ShapeBasePacket(const ShapeBasePacket& from);
  ShapeBasePacket(ShapeBasePacket&& from) noexcept
    : ShapeBasePacket() {
    *this = ::std::move(from);
  }

  inline ShapeBasePacket& operator=(const ShapeBasePacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShapeBasePacket& operator=(ShapeBasePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ShapeBasePacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShapeBasePacket* internal_default_instance() {
    return reinterpret_cast<const ShapeBasePacket*>(
               &_ShapeBasePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ShapeBasePacket& a, ShapeBasePacket& b) {
    a.Swap(&b);
  }
  inline void Swap(ShapeBasePacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ShapeBasePacket* New() const final {
    return CreateMaybeMessage<ShapeBasePacket>(nullptr);
  }

  ShapeBasePacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ShapeBasePacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ShapeBasePacket& from);
  void MergeFrom(const ShapeBasePacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShapeBasePacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ShapeBasePacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalMatrixFieldNumber = 3,
    kIdFieldNumber = 1,
    kHasLocalMatrixFieldNumber = 2,
    kShapeTypeFieldNumber = 4,
  };
  // .PhysicsTelemetry.Matrix4x4Packet localMatrix = 3;
  bool has_localmatrix() const;
  private:
  bool _internal_has_localmatrix() const;
  public:
  void clear_localmatrix();
  const ::PhysicsTelemetry::Matrix4x4Packet& localmatrix() const;
  ::PhysicsTelemetry::Matrix4x4Packet* release_localmatrix();
  ::PhysicsTelemetry::Matrix4x4Packet* mutable_localmatrix();
  void set_allocated_localmatrix(::PhysicsTelemetry::Matrix4x4Packet* localmatrix);
  private:
  const ::PhysicsTelemetry::Matrix4x4Packet& _internal_localmatrix() const;
  ::PhysicsTelemetry::Matrix4x4Packet* _internal_mutable_localmatrix();
  public:

  // uint32 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool hasLocalMatrix = 2;
  void clear_haslocalmatrix();
  bool haslocalmatrix() const;
  void set_haslocalmatrix(bool value);
  private:
  bool _internal_haslocalmatrix() const;
  void _internal_set_haslocalmatrix(bool value);
  public:

  // .PhysicsTelemetry.ShapeTypePacket shapeType = 4;
  void clear_shapetype();
  ::PhysicsTelemetry::ShapeTypePacket shapetype() const;
  void set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  private:
  ::PhysicsTelemetry::ShapeTypePacket _internal_shapetype() const;
  void _internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ShapeBasePacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PhysicsTelemetry::Matrix4x4Packet* localmatrix_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  bool haslocalmatrix_;
  int shapetype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ObbShapePacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ObbShapePacket) */ {
 public:
  ObbShapePacket();
  virtual ~ObbShapePacket();

  ObbShapePacket(const ObbShapePacket& from);
  ObbShapePacket(ObbShapePacket&& from) noexcept
    : ObbShapePacket() {
    *this = ::std::move(from);
  }

  inline ObbShapePacket& operator=(const ObbShapePacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObbShapePacket& operator=(ObbShapePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObbShapePacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObbShapePacket* internal_default_instance() {
    return reinterpret_cast<const ObbShapePacket*>(
               &_ObbShapePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ObbShapePacket& a, ObbShapePacket& b) {
    a.Swap(&b);
  }
  inline void Swap(ObbShapePacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObbShapePacket* New() const final {
    return CreateMaybeMessage<ObbShapePacket>(nullptr);
  }

  ObbShapePacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObbShapePacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObbShapePacket& from);
  void MergeFrom(const ObbShapePacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObbShapePacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ObbShapePacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseFieldNumber = 1,
    kHalfExtentsFieldNumber = 2,
  };
  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  bool has_base() const;
  private:
  bool _internal_has_base() const;
  public:
  void clear_base();
  const ::PhysicsTelemetry::ShapeBasePacket& base() const;
  ::PhysicsTelemetry::ShapeBasePacket* release_base();
  ::PhysicsTelemetry::ShapeBasePacket* mutable_base();
  void set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base);
  private:
  const ::PhysicsTelemetry::ShapeBasePacket& _internal_base() const;
  ::PhysicsTelemetry::ShapeBasePacket* _internal_mutable_base();
  public:

  // .PhysicsTelemetry.Vector3Packet halfExtents = 2;
  bool has_halfextents() const;
  private:
  bool _internal_has_halfextents() const;
  public:
  void clear_halfextents();
  const ::PhysicsTelemetry::Vector3Packet& halfextents() const;
  ::PhysicsTelemetry::Vector3Packet* release_halfextents();
  ::PhysicsTelemetry::Vector3Packet* mutable_halfextents();
  void set_allocated_halfextents(::PhysicsTelemetry::Vector3Packet* halfextents);
  private:
  const ::PhysicsTelemetry::Vector3Packet& _internal_halfextents() const;
  ::PhysicsTelemetry::Vector3Packet* _internal_mutable_halfextents();
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ObbShapePacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PhysicsTelemetry::ShapeBasePacket* base_;
  ::PhysicsTelemetry::Vector3Packet* halfextents_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class TetrahedronShapePacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.TetrahedronShapePacket) */ {
 public:
  TetrahedronShapePacket();
  virtual ~TetrahedronShapePacket();

  TetrahedronShapePacket(const TetrahedronShapePacket& from);
  TetrahedronShapePacket(TetrahedronShapePacket&& from) noexcept
    : TetrahedronShapePacket() {
    *this = ::std::move(from);
  }

  inline TetrahedronShapePacket& operator=(const TetrahedronShapePacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline TetrahedronShapePacket& operator=(TetrahedronShapePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TetrahedronShapePacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TetrahedronShapePacket* internal_default_instance() {
    return reinterpret_cast<const TetrahedronShapePacket*>(
               &_TetrahedronShapePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TetrahedronShapePacket& a, TetrahedronShapePacket& b) {
    a.Swap(&b);
  }
  inline void Swap(TetrahedronShapePacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TetrahedronShapePacket* New() const final {
    return CreateMaybeMessage<TetrahedronShapePacket>(nullptr);
  }

  TetrahedronShapePacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TetrahedronShapePacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TetrahedronShapePacket& from);
  void MergeFrom(const TetrahedronShapePacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TetrahedronShapePacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.TetrahedronShapePacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBaseFieldNumber = 1,
  };
  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  bool has_base() const;
  private:
  bool _internal_has_base() const;
  public:
  void clear_base();
  const ::PhysicsTelemetry::ShapeBasePacket& base() const;
  ::PhysicsTelemetry::ShapeBasePacket* release_base();
  ::PhysicsTelemetry::ShapeBasePacket* mutable_base();
  void set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base);
  private:
  const ::PhysicsTelemetry::ShapeBasePacket& _internal_base() const;
  ::PhysicsTelemetry::ShapeBasePacket* _internal_mutable_base();
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.TetrahedronShapePacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PhysicsTelemetry::ShapeBasePacket* base_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ConvexHullShapePacket_Vertex :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ConvexHullShapePacket.Vertex) */ {
 public:
  ConvexHullShapePacket_Vertex();
  virtual ~ConvexHullShapePacket_Vertex();

  ConvexHullShapePacket_Vertex(const ConvexHullShapePacket_Vertex& from);
  ConvexHullShapePacket_Vertex(ConvexHullShapePacket_Vertex&& from) noexcept
    : ConvexHullShapePacket_Vertex() {
    *this = ::std::move(from);
  }

  inline ConvexHullShapePacket_Vertex& operator=(const ConvexHullShapePacket_Vertex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvexHullShapePacket_Vertex& operator=(ConvexHullShapePacket_Vertex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConvexHullShapePacket_Vertex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvexHullShapePacket_Vertex* internal_default_instance() {
    return reinterpret_cast<const ConvexHullShapePacket_Vertex*>(
               &_ConvexHullShapePacket_Vertex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ConvexHullShapePacket_Vertex& a, ConvexHullShapePacket_Vertex& b) {
    a.Swap(&b);
  }
  inline void Swap(ConvexHullShapePacket_Vertex* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConvexHullShapePacket_Vertex* New() const final {
    return CreateMaybeMessage<ConvexHullShapePacket_Vertex>(nullptr);
  }

  ConvexHullShapePacket_Vertex* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConvexHullShapePacket_Vertex>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConvexHullShapePacket_Vertex& from);
  void MergeFrom(const ConvexHullShapePacket_Vertex& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvexHullShapePacket_Vertex* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ConvexHullShapePacket.Vertex";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 1,
    kNormalFieldNumber = 2,
  };
  // .PhysicsTelemetry.Vector3Packet position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::PhysicsTelemetry::Vector3Packet& position() const;
  ::PhysicsTelemetry::Vector3Packet* release_position();
  ::PhysicsTelemetry::Vector3Packet* mutable_position();
  void set_allocated_position(::PhysicsTelemetry::Vector3Packet* position);
  private:
  const ::PhysicsTelemetry::Vector3Packet& _internal_position() const;
  ::PhysicsTelemetry::Vector3Packet* _internal_mutable_position();
  public:

  // .PhysicsTelemetry.Vector3Packet normal = 2;
  bool has_normal() const;
  private:
  bool _internal_has_normal() const;
  public:
  void clear_normal();
  const ::PhysicsTelemetry::Vector3Packet& normal() const;
  ::PhysicsTelemetry::Vector3Packet* release_normal();
  ::PhysicsTelemetry::Vector3Packet* mutable_normal();
  void set_allocated_normal(::PhysicsTelemetry::Vector3Packet* normal);
  private:
  const ::PhysicsTelemetry::Vector3Packet& _internal_normal() const;
  ::PhysicsTelemetry::Vector3Packet* _internal_mutable_normal();
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ConvexHullShapePacket.Vertex)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PhysicsTelemetry::Vector3Packet* position_;
  ::PhysicsTelemetry::Vector3Packet* normal_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ConvexHullShapePacket_Face :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ConvexHullShapePacket.Face) */ {
 public:
  ConvexHullShapePacket_Face();
  virtual ~ConvexHullShapePacket_Face();

  ConvexHullShapePacket_Face(const ConvexHullShapePacket_Face& from);
  ConvexHullShapePacket_Face(ConvexHullShapePacket_Face&& from) noexcept
    : ConvexHullShapePacket_Face() {
    *this = ::std::move(from);
  }

  inline ConvexHullShapePacket_Face& operator=(const ConvexHullShapePacket_Face& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvexHullShapePacket_Face& operator=(ConvexHullShapePacket_Face&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConvexHullShapePacket_Face& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvexHullShapePacket_Face* internal_default_instance() {
    return reinterpret_cast<const ConvexHullShapePacket_Face*>(
               &_ConvexHullShapePacket_Face_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ConvexHullShapePacket_Face& a, ConvexHullShapePacket_Face& b) {
    a.Swap(&b);
  }
  inline void Swap(ConvexHullShapePacket_Face* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConvexHullShapePacket_Face* New() const final {
    return CreateMaybeMessage<ConvexHullShapePacket_Face>(nullptr);
  }

  ConvexHullShapePacket_Face* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConvexHullShapePacket_Face>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConvexHullShapePacket_Face& from);
  void MergeFrom(const ConvexHullShapePacket_Face& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvexHullShapePacket_Face* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ConvexHullShapePacket.Face";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVert0FieldNumber = 1,
    kVert1FieldNumber = 2,
    kVert2FieldNumber = 3,
  };
  // int32 vert0 = 1;
  void clear_vert0();
  ::PROTOBUF_NAMESPACE_ID::int32 vert0() const;
  void set_vert0(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vert0() const;
  void _internal_set_vert0(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vert1 = 2;
  void clear_vert1();
  ::PROTOBUF_NAMESPACE_ID::int32 vert1() const;
  void set_vert1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vert1() const;
  void _internal_set_vert1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 vert2 = 3;
  void clear_vert2();
  ::PROTOBUF_NAMESPACE_ID::int32 vert2() const;
  void set_vert2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vert2() const;
  void _internal_set_vert2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ConvexHullShapePacket.Face)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 vert0_;
  ::PROTOBUF_NAMESPACE_ID::int32 vert1_;
  ::PROTOBUF_NAMESPACE_ID::int32 vert2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ConvexHullShapePacket :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ConvexHullShapePacket) */ {
 public:
  ConvexHullShapePacket();
  virtual ~ConvexHullShapePacket();

  ConvexHullShapePacket(const ConvexHullShapePacket& from);
  ConvexHullShapePacket(ConvexHullShapePacket&& from) noexcept
    : ConvexHullShapePacket() {
    *this = ::std::move(from);
  }

  inline ConvexHullShapePacket& operator=(const ConvexHullShapePacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConvexHullShapePacket& operator=(ConvexHullShapePacket&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConvexHullShapePacket& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConvexHullShapePacket* internal_default_instance() {
    return reinterpret_cast<const ConvexHullShapePacket*>(
               &_ConvexHullShapePacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ConvexHullShapePacket& a, ConvexHullShapePacket& b) {
    a.Swap(&b);
  }
  inline void Swap(ConvexHullShapePacket* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConvexHullShapePacket* New() const final {
    return CreateMaybeMessage<ConvexHullShapePacket>(nullptr);
  }

  ConvexHullShapePacket* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConvexHullShapePacket>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConvexHullShapePacket& from);
  void MergeFrom(const ConvexHullShapePacket& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConvexHullShapePacket* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ConvexHullShapePacket";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef ConvexHullShapePacket_Vertex Vertex;
  typedef ConvexHullShapePacket_Face Face;

  // accessors -------------------------------------------------------

  enum : int {
    kVerticesFieldNumber = 2,
    kFacesFieldNumber = 3,
    kBaseFieldNumber = 1,
  };
  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Vertex vertices = 2;
  int vertices_size() const;
  private:
  int _internal_vertices_size() const;
  public:
  void clear_vertices();
  ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* mutable_vertices(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >*
      mutable_vertices();
  private:
  const ::PhysicsTelemetry::ConvexHullShapePacket_Vertex& _internal_vertices(int index) const;
  ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* _internal_add_vertices();
  public:
  const ::PhysicsTelemetry::ConvexHullShapePacket_Vertex& vertices(int index) const;
  ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* add_vertices();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >&
      vertices() const;

  // repeated .PhysicsTelemetry.ConvexHullShapePacket.Face faces = 3;
  int faces_size() const;
  private:
  int _internal_faces_size() const;
  public:
  void clear_faces();
  ::PhysicsTelemetry::ConvexHullShapePacket_Face* mutable_faces(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Face >*
      mutable_faces();
  private:
  const ::PhysicsTelemetry::ConvexHullShapePacket_Face& _internal_faces(int index) const;
  ::PhysicsTelemetry::ConvexHullShapePacket_Face* _internal_add_faces();
  public:
  const ::PhysicsTelemetry::ConvexHullShapePacket_Face& faces(int index) const;
  ::PhysicsTelemetry::ConvexHullShapePacket_Face* add_faces();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Face >&
      faces() const;

  // .PhysicsTelemetry.ShapeBasePacket base = 1;
  bool has_base() const;
  private:
  bool _internal_has_base() const;
  public:
  void clear_base();
  const ::PhysicsTelemetry::ShapeBasePacket& base() const;
  ::PhysicsTelemetry::ShapeBasePacket* release_base();
  ::PhysicsTelemetry::ShapeBasePacket* mutable_base();
  void set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base);
  private:
  const ::PhysicsTelemetry::ShapeBasePacket& _internal_base() const;
  ::PhysicsTelemetry::ShapeBasePacket* _internal_mutable_base();
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ConvexHullShapePacket)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex > vertices_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Face > faces_;
  ::PhysicsTelemetry::ShapeBasePacket* base_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ShapeCreatedMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ShapeCreatedMessage) */ {
 public:
  ShapeCreatedMessage();
  virtual ~ShapeCreatedMessage();

  ShapeCreatedMessage(const ShapeCreatedMessage& from);
  ShapeCreatedMessage(ShapeCreatedMessage&& from) noexcept
    : ShapeCreatedMessage() {
    *this = ::std::move(from);
  }

  inline ShapeCreatedMessage& operator=(const ShapeCreatedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShapeCreatedMessage& operator=(ShapeCreatedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ShapeCreatedMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShapeCreatedMessage* internal_default_instance() {
    return reinterpret_cast<const ShapeCreatedMessage*>(
               &_ShapeCreatedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ShapeCreatedMessage& a, ShapeCreatedMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ShapeCreatedMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ShapeCreatedMessage* New() const final {
    return CreateMaybeMessage<ShapeCreatedMessage>(nullptr);
  }

  ShapeCreatedMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ShapeCreatedMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ShapeCreatedMessage& from);
  void MergeFrom(const ShapeCreatedMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShapeCreatedMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ShapeCreatedMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeTypeFieldNumber = 1,
    kShapeSizeFieldNumber = 2,
  };
  // .PhysicsTelemetry.ShapeTypePacket shapeType = 1;
  void clear_shapetype();
  ::PhysicsTelemetry::ShapeTypePacket shapetype() const;
  void set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  private:
  ::PhysicsTelemetry::ShapeTypePacket _internal_shapetype() const;
  void _internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  public:

  // int32 shapeSize = 2;
  void clear_shapesize();
  ::PROTOBUF_NAMESPACE_ID::int32 shapesize() const;
  void set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shapesize() const;
  void _internal_set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ShapeCreatedMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int shapetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 shapesize_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// -------------------------------------------------------------------

class ShapeChangedMessage :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PhysicsTelemetry.ShapeChangedMessage) */ {
 public:
  ShapeChangedMessage();
  virtual ~ShapeChangedMessage();

  ShapeChangedMessage(const ShapeChangedMessage& from);
  ShapeChangedMessage(ShapeChangedMessage&& from) noexcept
    : ShapeChangedMessage() {
    *this = ::std::move(from);
  }

  inline ShapeChangedMessage& operator=(const ShapeChangedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShapeChangedMessage& operator=(ShapeChangedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ShapeChangedMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ShapeChangedMessage* internal_default_instance() {
    return reinterpret_cast<const ShapeChangedMessage*>(
               &_ShapeChangedMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ShapeChangedMessage& a, ShapeChangedMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ShapeChangedMessage* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ShapeChangedMessage* New() const final {
    return CreateMaybeMessage<ShapeChangedMessage>(nullptr);
  }

  ShapeChangedMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ShapeChangedMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ShapeChangedMessage& from);
  void MergeFrom(const ShapeChangedMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ShapeChangedMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PhysicsTelemetry.ShapeChangedMessage";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_shapes_2eproto);
    return ::descriptor_table_shapes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeTypeFieldNumber = 1,
    kShapeSizeFieldNumber = 2,
  };
  // .PhysicsTelemetry.ShapeTypePacket shapeType = 1;
  void clear_shapetype();
  ::PhysicsTelemetry::ShapeTypePacket shapetype() const;
  void set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  private:
  ::PhysicsTelemetry::ShapeTypePacket _internal_shapetype() const;
  void _internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value);
  public:

  // int32 shapeSize = 2;
  void clear_shapesize();
  ::PROTOBUF_NAMESPACE_ID::int32 shapesize() const;
  void set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shapesize() const;
  void _internal_set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PhysicsTelemetry.ShapeChangedMessage)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int shapetype_;
  ::PROTOBUF_NAMESPACE_ID::int32 shapesize_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_shapes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ShapeBasePacket

// uint32 Id = 1;
inline void ShapeBasePacket::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ShapeBasePacket::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ShapeBasePacket::id() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeBasePacket.Id)
  return _internal_id();
}
inline void ShapeBasePacket::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void ShapeBasePacket::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeBasePacket.Id)
}

// bool hasLocalMatrix = 2;
inline void ShapeBasePacket::clear_haslocalmatrix() {
  haslocalmatrix_ = false;
}
inline bool ShapeBasePacket::_internal_haslocalmatrix() const {
  return haslocalmatrix_;
}
inline bool ShapeBasePacket::haslocalmatrix() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeBasePacket.hasLocalMatrix)
  return _internal_haslocalmatrix();
}
inline void ShapeBasePacket::_internal_set_haslocalmatrix(bool value) {
  
  haslocalmatrix_ = value;
}
inline void ShapeBasePacket::set_haslocalmatrix(bool value) {
  _internal_set_haslocalmatrix(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeBasePacket.hasLocalMatrix)
}

// .PhysicsTelemetry.Matrix4x4Packet localMatrix = 3;
inline bool ShapeBasePacket::_internal_has_localmatrix() const {
  return this != internal_default_instance() && localmatrix_ != nullptr;
}
inline bool ShapeBasePacket::has_localmatrix() const {
  return _internal_has_localmatrix();
}
inline const ::PhysicsTelemetry::Matrix4x4Packet& ShapeBasePacket::_internal_localmatrix() const {
  const ::PhysicsTelemetry::Matrix4x4Packet* p = localmatrix_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::Matrix4x4Packet*>(
      &::PhysicsTelemetry::_Matrix4x4Packet_default_instance_);
}
inline const ::PhysicsTelemetry::Matrix4x4Packet& ShapeBasePacket::localmatrix() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeBasePacket.localMatrix)
  return _internal_localmatrix();
}
inline ::PhysicsTelemetry::Matrix4x4Packet* ShapeBasePacket::release_localmatrix() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ShapeBasePacket.localMatrix)
  
  ::PhysicsTelemetry::Matrix4x4Packet* temp = localmatrix_;
  localmatrix_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::Matrix4x4Packet* ShapeBasePacket::_internal_mutable_localmatrix() {
  
  if (localmatrix_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::Matrix4x4Packet>(GetArenaNoVirtual());
    localmatrix_ = p;
  }
  return localmatrix_;
}
inline ::PhysicsTelemetry::Matrix4x4Packet* ShapeBasePacket::mutable_localmatrix() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ShapeBasePacket.localMatrix)
  return _internal_mutable_localmatrix();
}
inline void ShapeBasePacket::set_allocated_localmatrix(::PhysicsTelemetry::Matrix4x4Packet* localmatrix) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(localmatrix_);
  }
  if (localmatrix) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      localmatrix = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, localmatrix, submessage_arena);
    }
    
  } else {
    
  }
  localmatrix_ = localmatrix;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ShapeBasePacket.localMatrix)
}

// .PhysicsTelemetry.ShapeTypePacket shapeType = 4;
inline void ShapeBasePacket::clear_shapetype() {
  shapetype_ = 0;
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeBasePacket::_internal_shapetype() const {
  return static_cast< ::PhysicsTelemetry::ShapeTypePacket >(shapetype_);
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeBasePacket::shapetype() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeBasePacket.shapeType)
  return _internal_shapetype();
}
inline void ShapeBasePacket::_internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  
  shapetype_ = value;
}
inline void ShapeBasePacket::set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  _internal_set_shapetype(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeBasePacket.shapeType)
}

// -------------------------------------------------------------------

// ObbShapePacket

// .PhysicsTelemetry.ShapeBasePacket base = 1;
inline bool ObbShapePacket::_internal_has_base() const {
  return this != internal_default_instance() && base_ != nullptr;
}
inline bool ObbShapePacket::has_base() const {
  return _internal_has_base();
}
inline void ObbShapePacket::clear_base() {
  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
inline const ::PhysicsTelemetry::ShapeBasePacket& ObbShapePacket::_internal_base() const {
  const ::PhysicsTelemetry::ShapeBasePacket* p = base_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::ShapeBasePacket*>(
      &::PhysicsTelemetry::_ShapeBasePacket_default_instance_);
}
inline const ::PhysicsTelemetry::ShapeBasePacket& ObbShapePacket::base() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ObbShapePacket.base)
  return _internal_base();
}
inline ::PhysicsTelemetry::ShapeBasePacket* ObbShapePacket::release_base() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ObbShapePacket.base)
  
  ::PhysicsTelemetry::ShapeBasePacket* temp = base_;
  base_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::ShapeBasePacket* ObbShapePacket::_internal_mutable_base() {
  
  if (base_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::ShapeBasePacket>(GetArenaNoVirtual());
    base_ = p;
  }
  return base_;
}
inline ::PhysicsTelemetry::ShapeBasePacket* ObbShapePacket::mutable_base() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ObbShapePacket.base)
  return _internal_mutable_base();
}
inline void ObbShapePacket::set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete base_;
  }
  if (base) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      base = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ObbShapePacket.base)
}

// .PhysicsTelemetry.Vector3Packet halfExtents = 2;
inline bool ObbShapePacket::_internal_has_halfextents() const {
  return this != internal_default_instance() && halfextents_ != nullptr;
}
inline bool ObbShapePacket::has_halfextents() const {
  return _internal_has_halfextents();
}
inline const ::PhysicsTelemetry::Vector3Packet& ObbShapePacket::_internal_halfextents() const {
  const ::PhysicsTelemetry::Vector3Packet* p = halfextents_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::Vector3Packet*>(
      &::PhysicsTelemetry::_Vector3Packet_default_instance_);
}
inline const ::PhysicsTelemetry::Vector3Packet& ObbShapePacket::halfextents() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ObbShapePacket.halfExtents)
  return _internal_halfextents();
}
inline ::PhysicsTelemetry::Vector3Packet* ObbShapePacket::release_halfextents() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ObbShapePacket.halfExtents)
  
  ::PhysicsTelemetry::Vector3Packet* temp = halfextents_;
  halfextents_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::Vector3Packet* ObbShapePacket::_internal_mutable_halfextents() {
  
  if (halfextents_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::Vector3Packet>(GetArenaNoVirtual());
    halfextents_ = p;
  }
  return halfextents_;
}
inline ::PhysicsTelemetry::Vector3Packet* ObbShapePacket::mutable_halfextents() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ObbShapePacket.halfExtents)
  return _internal_mutable_halfextents();
}
inline void ObbShapePacket::set_allocated_halfextents(::PhysicsTelemetry::Vector3Packet* halfextents) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(halfextents_);
  }
  if (halfextents) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      halfextents = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, halfextents, submessage_arena);
    }
    
  } else {
    
  }
  halfextents_ = halfextents;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ObbShapePacket.halfExtents)
}

// -------------------------------------------------------------------

// TetrahedronShapePacket

// .PhysicsTelemetry.ShapeBasePacket base = 1;
inline bool TetrahedronShapePacket::_internal_has_base() const {
  return this != internal_default_instance() && base_ != nullptr;
}
inline bool TetrahedronShapePacket::has_base() const {
  return _internal_has_base();
}
inline void TetrahedronShapePacket::clear_base() {
  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
inline const ::PhysicsTelemetry::ShapeBasePacket& TetrahedronShapePacket::_internal_base() const {
  const ::PhysicsTelemetry::ShapeBasePacket* p = base_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::ShapeBasePacket*>(
      &::PhysicsTelemetry::_ShapeBasePacket_default_instance_);
}
inline const ::PhysicsTelemetry::ShapeBasePacket& TetrahedronShapePacket::base() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.TetrahedronShapePacket.base)
  return _internal_base();
}
inline ::PhysicsTelemetry::ShapeBasePacket* TetrahedronShapePacket::release_base() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.TetrahedronShapePacket.base)
  
  ::PhysicsTelemetry::ShapeBasePacket* temp = base_;
  base_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::ShapeBasePacket* TetrahedronShapePacket::_internal_mutable_base() {
  
  if (base_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::ShapeBasePacket>(GetArenaNoVirtual());
    base_ = p;
  }
  return base_;
}
inline ::PhysicsTelemetry::ShapeBasePacket* TetrahedronShapePacket::mutable_base() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.TetrahedronShapePacket.base)
  return _internal_mutable_base();
}
inline void TetrahedronShapePacket::set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete base_;
  }
  if (base) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      base = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.TetrahedronShapePacket.base)
}

// -------------------------------------------------------------------

// ConvexHullShapePacket_Vertex

// .PhysicsTelemetry.Vector3Packet position = 1;
inline bool ConvexHullShapePacket_Vertex::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool ConvexHullShapePacket_Vertex::has_position() const {
  return _internal_has_position();
}
inline const ::PhysicsTelemetry::Vector3Packet& ConvexHullShapePacket_Vertex::_internal_position() const {
  const ::PhysicsTelemetry::Vector3Packet* p = position_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::Vector3Packet*>(
      &::PhysicsTelemetry::_Vector3Packet_default_instance_);
}
inline const ::PhysicsTelemetry::Vector3Packet& ConvexHullShapePacket_Vertex::position() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.Vertex.position)
  return _internal_position();
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::release_position() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ConvexHullShapePacket.Vertex.position)
  
  ::PhysicsTelemetry::Vector3Packet* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::Vector3Packet>(GetArenaNoVirtual());
    position_ = p;
  }
  return position_;
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::mutable_position() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ConvexHullShapePacket.Vertex.position)
  return _internal_mutable_position();
}
inline void ConvexHullShapePacket_Vertex::set_allocated_position(::PhysicsTelemetry::Vector3Packet* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ConvexHullShapePacket.Vertex.position)
}

// .PhysicsTelemetry.Vector3Packet normal = 2;
inline bool ConvexHullShapePacket_Vertex::_internal_has_normal() const {
  return this != internal_default_instance() && normal_ != nullptr;
}
inline bool ConvexHullShapePacket_Vertex::has_normal() const {
  return _internal_has_normal();
}
inline const ::PhysicsTelemetry::Vector3Packet& ConvexHullShapePacket_Vertex::_internal_normal() const {
  const ::PhysicsTelemetry::Vector3Packet* p = normal_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::Vector3Packet*>(
      &::PhysicsTelemetry::_Vector3Packet_default_instance_);
}
inline const ::PhysicsTelemetry::Vector3Packet& ConvexHullShapePacket_Vertex::normal() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.Vertex.normal)
  return _internal_normal();
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::release_normal() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ConvexHullShapePacket.Vertex.normal)
  
  ::PhysicsTelemetry::Vector3Packet* temp = normal_;
  normal_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::_internal_mutable_normal() {
  
  if (normal_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::Vector3Packet>(GetArenaNoVirtual());
    normal_ = p;
  }
  return normal_;
}
inline ::PhysicsTelemetry::Vector3Packet* ConvexHullShapePacket_Vertex::mutable_normal() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ConvexHullShapePacket.Vertex.normal)
  return _internal_mutable_normal();
}
inline void ConvexHullShapePacket_Vertex::set_allocated_normal(::PhysicsTelemetry::Vector3Packet* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(normal_);
  }
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    
  } else {
    
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ConvexHullShapePacket.Vertex.normal)
}

// -------------------------------------------------------------------

// ConvexHullShapePacket_Face

// int32 vert0 = 1;
inline void ConvexHullShapePacket_Face::clear_vert0() {
  vert0_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::_internal_vert0() const {
  return vert0_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::vert0() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.Face.vert0)
  return _internal_vert0();
}
inline void ConvexHullShapePacket_Face::_internal_set_vert0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vert0_ = value;
}
inline void ConvexHullShapePacket_Face::set_vert0(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vert0(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ConvexHullShapePacket.Face.vert0)
}

// int32 vert1 = 2;
inline void ConvexHullShapePacket_Face::clear_vert1() {
  vert1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::_internal_vert1() const {
  return vert1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::vert1() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.Face.vert1)
  return _internal_vert1();
}
inline void ConvexHullShapePacket_Face::_internal_set_vert1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vert1_ = value;
}
inline void ConvexHullShapePacket_Face::set_vert1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vert1(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ConvexHullShapePacket.Face.vert1)
}

// int32 vert2 = 3;
inline void ConvexHullShapePacket_Face::clear_vert2() {
  vert2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::_internal_vert2() const {
  return vert2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ConvexHullShapePacket_Face::vert2() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.Face.vert2)
  return _internal_vert2();
}
inline void ConvexHullShapePacket_Face::_internal_set_vert2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  vert2_ = value;
}
inline void ConvexHullShapePacket_Face::set_vert2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vert2(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ConvexHullShapePacket.Face.vert2)
}

// -------------------------------------------------------------------

// ConvexHullShapePacket

// .PhysicsTelemetry.ShapeBasePacket base = 1;
inline bool ConvexHullShapePacket::_internal_has_base() const {
  return this != internal_default_instance() && base_ != nullptr;
}
inline bool ConvexHullShapePacket::has_base() const {
  return _internal_has_base();
}
inline void ConvexHullShapePacket::clear_base() {
  if (GetArenaNoVirtual() == nullptr && base_ != nullptr) {
    delete base_;
  }
  base_ = nullptr;
}
inline const ::PhysicsTelemetry::ShapeBasePacket& ConvexHullShapePacket::_internal_base() const {
  const ::PhysicsTelemetry::ShapeBasePacket* p = base_;
  return p != nullptr ? *p : *reinterpret_cast<const ::PhysicsTelemetry::ShapeBasePacket*>(
      &::PhysicsTelemetry::_ShapeBasePacket_default_instance_);
}
inline const ::PhysicsTelemetry::ShapeBasePacket& ConvexHullShapePacket::base() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.base)
  return _internal_base();
}
inline ::PhysicsTelemetry::ShapeBasePacket* ConvexHullShapePacket::release_base() {
  // @@protoc_insertion_point(field_release:PhysicsTelemetry.ConvexHullShapePacket.base)
  
  ::PhysicsTelemetry::ShapeBasePacket* temp = base_;
  base_ = nullptr;
  return temp;
}
inline ::PhysicsTelemetry::ShapeBasePacket* ConvexHullShapePacket::_internal_mutable_base() {
  
  if (base_ == nullptr) {
    auto* p = CreateMaybeMessage<::PhysicsTelemetry::ShapeBasePacket>(GetArenaNoVirtual());
    base_ = p;
  }
  return base_;
}
inline ::PhysicsTelemetry::ShapeBasePacket* ConvexHullShapePacket::mutable_base() {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ConvexHullShapePacket.base)
  return _internal_mutable_base();
}
inline void ConvexHullShapePacket::set_allocated_base(::PhysicsTelemetry::ShapeBasePacket* base) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete base_;
  }
  if (base) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      base = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, base, submessage_arena);
    }
    
  } else {
    
  }
  base_ = base;
  // @@protoc_insertion_point(field_set_allocated:PhysicsTelemetry.ConvexHullShapePacket.base)
}

// repeated .PhysicsTelemetry.ConvexHullShapePacket.Vertex vertices = 2;
inline int ConvexHullShapePacket::_internal_vertices_size() const {
  return vertices_.size();
}
inline int ConvexHullShapePacket::vertices_size() const {
  return _internal_vertices_size();
}
inline void ConvexHullShapePacket::clear_vertices() {
  vertices_.Clear();
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* ConvexHullShapePacket::mutable_vertices(int index) {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ConvexHullShapePacket.vertices)
  return vertices_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >*
ConvexHullShapePacket::mutable_vertices() {
  // @@protoc_insertion_point(field_mutable_list:PhysicsTelemetry.ConvexHullShapePacket.vertices)
  return &vertices_;
}
inline const ::PhysicsTelemetry::ConvexHullShapePacket_Vertex& ConvexHullShapePacket::_internal_vertices(int index) const {
  return vertices_.Get(index);
}
inline const ::PhysicsTelemetry::ConvexHullShapePacket_Vertex& ConvexHullShapePacket::vertices(int index) const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.vertices)
  return _internal_vertices(index);
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* ConvexHullShapePacket::_internal_add_vertices() {
  return vertices_.Add();
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Vertex* ConvexHullShapePacket::add_vertices() {
  // @@protoc_insertion_point(field_add:PhysicsTelemetry.ConvexHullShapePacket.vertices)
  return _internal_add_vertices();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Vertex >&
ConvexHullShapePacket::vertices() const {
  // @@protoc_insertion_point(field_list:PhysicsTelemetry.ConvexHullShapePacket.vertices)
  return vertices_;
}

// repeated .PhysicsTelemetry.ConvexHullShapePacket.Face faces = 3;
inline int ConvexHullShapePacket::_internal_faces_size() const {
  return faces_.size();
}
inline int ConvexHullShapePacket::faces_size() const {
  return _internal_faces_size();
}
inline void ConvexHullShapePacket::clear_faces() {
  faces_.Clear();
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Face* ConvexHullShapePacket::mutable_faces(int index) {
  // @@protoc_insertion_point(field_mutable:PhysicsTelemetry.ConvexHullShapePacket.faces)
  return faces_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Face >*
ConvexHullShapePacket::mutable_faces() {
  // @@protoc_insertion_point(field_mutable_list:PhysicsTelemetry.ConvexHullShapePacket.faces)
  return &faces_;
}
inline const ::PhysicsTelemetry::ConvexHullShapePacket_Face& ConvexHullShapePacket::_internal_faces(int index) const {
  return faces_.Get(index);
}
inline const ::PhysicsTelemetry::ConvexHullShapePacket_Face& ConvexHullShapePacket::faces(int index) const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ConvexHullShapePacket.faces)
  return _internal_faces(index);
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Face* ConvexHullShapePacket::_internal_add_faces() {
  return faces_.Add();
}
inline ::PhysicsTelemetry::ConvexHullShapePacket_Face* ConvexHullShapePacket::add_faces() {
  // @@protoc_insertion_point(field_add:PhysicsTelemetry.ConvexHullShapePacket.faces)
  return _internal_add_faces();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PhysicsTelemetry::ConvexHullShapePacket_Face >&
ConvexHullShapePacket::faces() const {
  // @@protoc_insertion_point(field_list:PhysicsTelemetry.ConvexHullShapePacket.faces)
  return faces_;
}

// -------------------------------------------------------------------

// ShapeCreatedMessage

// .PhysicsTelemetry.ShapeTypePacket shapeType = 1;
inline void ShapeCreatedMessage::clear_shapetype() {
  shapetype_ = 0;
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeCreatedMessage::_internal_shapetype() const {
  return static_cast< ::PhysicsTelemetry::ShapeTypePacket >(shapetype_);
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeCreatedMessage::shapetype() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeCreatedMessage.shapeType)
  return _internal_shapetype();
}
inline void ShapeCreatedMessage::_internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  
  shapetype_ = value;
}
inline void ShapeCreatedMessage::set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  _internal_set_shapetype(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeCreatedMessage.shapeType)
}

// int32 shapeSize = 2;
inline void ShapeCreatedMessage::clear_shapesize() {
  shapesize_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ShapeCreatedMessage::_internal_shapesize() const {
  return shapesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ShapeCreatedMessage::shapesize() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeCreatedMessage.shapeSize)
  return _internal_shapesize();
}
inline void ShapeCreatedMessage::_internal_set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shapesize_ = value;
}
inline void ShapeCreatedMessage::set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shapesize(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeCreatedMessage.shapeSize)
}

// -------------------------------------------------------------------

// ShapeChangedMessage

// .PhysicsTelemetry.ShapeTypePacket shapeType = 1;
inline void ShapeChangedMessage::clear_shapetype() {
  shapetype_ = 0;
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeChangedMessage::_internal_shapetype() const {
  return static_cast< ::PhysicsTelemetry::ShapeTypePacket >(shapetype_);
}
inline ::PhysicsTelemetry::ShapeTypePacket ShapeChangedMessage::shapetype() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeChangedMessage.shapeType)
  return _internal_shapetype();
}
inline void ShapeChangedMessage::_internal_set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  
  shapetype_ = value;
}
inline void ShapeChangedMessage::set_shapetype(::PhysicsTelemetry::ShapeTypePacket value) {
  _internal_set_shapetype(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeChangedMessage.shapeType)
}

// int32 shapeSize = 2;
inline void ShapeChangedMessage::clear_shapesize() {
  shapesize_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ShapeChangedMessage::_internal_shapesize() const {
  return shapesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ShapeChangedMessage::shapesize() const {
  // @@protoc_insertion_point(field_get:PhysicsTelemetry.ShapeChangedMessage.shapeSize)
  return _internal_shapesize();
}
inline void ShapeChangedMessage::_internal_set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  shapesize_ = value;
}
inline void ShapeChangedMessage::set_shapesize(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shapesize(value);
  // @@protoc_insertion_point(field_set:PhysicsTelemetry.ShapeChangedMessage.shapeSize)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace PhysicsTelemetry

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PhysicsTelemetry::ShapeTypePacket> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PhysicsTelemetry::ShapeTypePacket>() {
  return ::PhysicsTelemetry::ShapeTypePacket_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_shapes_2eproto
