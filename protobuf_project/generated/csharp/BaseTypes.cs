// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base_types.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Physics.Telemetry.Serialised {

  /// <summary>Holder for reflection information generated from base_types.proto</summary>
  public static partial class BaseTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for base_types.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBiYXNlX3R5cGVzLnByb3RvEhBQaHlzaWNzVGVsZW1ldHJ5IjAKDVZlY3Rv",
            "cjNQYWNrZXQSCQoBeBgBIAEoAhIJCgF5GAIgASgCEgkKAXoYAyABKAIiOwoN",
            "VmVjdG9yNFBhY2tldBIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEo",
            "AhIJCgF3GAQgASgCIuEBCg9NYXRyaXg0eDRQYWNrZXQSCwoDbTExGAEgASgC",
            "EgsKA20xMhgCIAEoAhILCgNtMTMYAyABKAISCwoDbTE0GAQgASgCEgsKA20y",
            "MRgFIAEoAhILCgNtMjIYBiABKAISCwoDbTIzGAcgASgCEgsKA20yNBgIIAEo",
            "AhILCgNtMzEYCSABKAISCwoDbTMyGAogASgCEgsKA20zMxgLIAEoAhILCgNt",
            "MzQYDCABKAISCwoDbTQxGA0gASgCEgsKA200MhgOIAEoAhILCgNtNDMYDyAB",
            "KAISCwoDbTQ0GBAgASgCQh+qAhxQaHlzaWNzLlRlbGVtZXRyeS5TZXJpYWxp",
            "c2VkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.Vector3Packet), global::Physics.Telemetry.Serialised.Vector3Packet.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.Vector4Packet), global::Physics.Telemetry.Serialised.Vector4Packet.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.Matrix4x4Packet), global::Physics.Telemetry.Serialised.Matrix4x4Packet.Parser, new[]{ "M11", "M12", "M13", "M14", "M21", "M22", "M23", "M24", "M31", "M32", "M33", "M34", "M41", "M42", "M43", "M44" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Vector3Packet : pb::IMessage<Vector3Packet> {
    private static readonly pb::MessageParser<Vector3Packet> _parser = new pb::MessageParser<Vector3Packet>(() => new Vector3Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.BaseTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Packet(Vector3Packet other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Packet Clone() {
      return new Vector3Packet(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3Packet other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector4Packet : pb::IMessage<Vector4Packet> {
    private static readonly pb::MessageParser<Vector4Packet> _parser = new pb::MessageParser<Vector4Packet>(() => new Vector4Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector4Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.BaseTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector4Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector4Packet(Vector4Packet other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector4Packet Clone() {
      return new Vector4Packet(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector4Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector4Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (W != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector4Packet other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Matrix4x4Packet : pb::IMessage<Matrix4x4Packet> {
    private static readonly pb::MessageParser<Matrix4x4Packet> _parser = new pb::MessageParser<Matrix4x4Packet>(() => new Matrix4x4Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Matrix4x4Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.BaseTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4Packet(Matrix4x4Packet other) : this() {
      m11_ = other.m11_;
      m12_ = other.m12_;
      m13_ = other.m13_;
      m14_ = other.m14_;
      m21_ = other.m21_;
      m22_ = other.m22_;
      m23_ = other.m23_;
      m24_ = other.m24_;
      m31_ = other.m31_;
      m32_ = other.m32_;
      m33_ = other.m33_;
      m34_ = other.m34_;
      m41_ = other.m41_;
      m42_ = other.m42_;
      m43_ = other.m43_;
      m44_ = other.m44_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Matrix4x4Packet Clone() {
      return new Matrix4x4Packet(this);
    }

    /// <summary>Field number for the "m11" field.</summary>
    public const int M11FieldNumber = 1;
    private float m11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M11 {
      get { return m11_; }
      set {
        m11_ = value;
      }
    }

    /// <summary>Field number for the "m12" field.</summary>
    public const int M12FieldNumber = 2;
    private float m12_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M12 {
      get { return m12_; }
      set {
        m12_ = value;
      }
    }

    /// <summary>Field number for the "m13" field.</summary>
    public const int M13FieldNumber = 3;
    private float m13_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M13 {
      get { return m13_; }
      set {
        m13_ = value;
      }
    }

    /// <summary>Field number for the "m14" field.</summary>
    public const int M14FieldNumber = 4;
    private float m14_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M14 {
      get { return m14_; }
      set {
        m14_ = value;
      }
    }

    /// <summary>Field number for the "m21" field.</summary>
    public const int M21FieldNumber = 5;
    private float m21_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M21 {
      get { return m21_; }
      set {
        m21_ = value;
      }
    }

    /// <summary>Field number for the "m22" field.</summary>
    public const int M22FieldNumber = 6;
    private float m22_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M22 {
      get { return m22_; }
      set {
        m22_ = value;
      }
    }

    /// <summary>Field number for the "m23" field.</summary>
    public const int M23FieldNumber = 7;
    private float m23_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M23 {
      get { return m23_; }
      set {
        m23_ = value;
      }
    }

    /// <summary>Field number for the "m24" field.</summary>
    public const int M24FieldNumber = 8;
    private float m24_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M24 {
      get { return m24_; }
      set {
        m24_ = value;
      }
    }

    /// <summary>Field number for the "m31" field.</summary>
    public const int M31FieldNumber = 9;
    private float m31_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M31 {
      get { return m31_; }
      set {
        m31_ = value;
      }
    }

    /// <summary>Field number for the "m32" field.</summary>
    public const int M32FieldNumber = 10;
    private float m32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M32 {
      get { return m32_; }
      set {
        m32_ = value;
      }
    }

    /// <summary>Field number for the "m33" field.</summary>
    public const int M33FieldNumber = 11;
    private float m33_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M33 {
      get { return m33_; }
      set {
        m33_ = value;
      }
    }

    /// <summary>Field number for the "m34" field.</summary>
    public const int M34FieldNumber = 12;
    private float m34_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M34 {
      get { return m34_; }
      set {
        m34_ = value;
      }
    }

    /// <summary>Field number for the "m41" field.</summary>
    public const int M41FieldNumber = 13;
    private float m41_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M41 {
      get { return m41_; }
      set {
        m41_ = value;
      }
    }

    /// <summary>Field number for the "m42" field.</summary>
    public const int M42FieldNumber = 14;
    private float m42_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M42 {
      get { return m42_; }
      set {
        m42_ = value;
      }
    }

    /// <summary>Field number for the "m43" field.</summary>
    public const int M43FieldNumber = 15;
    private float m43_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M43 {
      get { return m43_; }
      set {
        m43_ = value;
      }
    }

    /// <summary>Field number for the "m44" field.</summary>
    public const int M44FieldNumber = 16;
    private float m44_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float M44 {
      get { return m44_; }
      set {
        m44_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Matrix4x4Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Matrix4x4Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M11, other.M11)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M12, other.M12)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M13, other.M13)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M14, other.M14)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M21, other.M21)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M22, other.M22)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M23, other.M23)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M24, other.M24)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M31, other.M31)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M32, other.M32)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M33, other.M33)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M34, other.M34)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M41, other.M41)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M42, other.M42)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M43, other.M43)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(M44, other.M44)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (M11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M11);
      if (M12 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M12);
      if (M13 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M13);
      if (M14 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M14);
      if (M21 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M21);
      if (M22 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M22);
      if (M23 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M23);
      if (M24 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M24);
      if (M31 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M31);
      if (M32 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M32);
      if (M33 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M33);
      if (M34 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M34);
      if (M41 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M41);
      if (M42 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M42);
      if (M43 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M43);
      if (M44 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(M44);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (M11 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(M11);
      }
      if (M12 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(M12);
      }
      if (M13 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(M13);
      }
      if (M14 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(M14);
      }
      if (M21 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(M21);
      }
      if (M22 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(M22);
      }
      if (M23 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(M23);
      }
      if (M24 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(M24);
      }
      if (M31 != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(M31);
      }
      if (M32 != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(M32);
      }
      if (M33 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(M33);
      }
      if (M34 != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(M34);
      }
      if (M41 != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(M41);
      }
      if (M42 != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(M42);
      }
      if (M43 != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(M43);
      }
      if (M44 != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(M44);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (M11 != 0F) {
        size += 1 + 4;
      }
      if (M12 != 0F) {
        size += 1 + 4;
      }
      if (M13 != 0F) {
        size += 1 + 4;
      }
      if (M14 != 0F) {
        size += 1 + 4;
      }
      if (M21 != 0F) {
        size += 1 + 4;
      }
      if (M22 != 0F) {
        size += 1 + 4;
      }
      if (M23 != 0F) {
        size += 1 + 4;
      }
      if (M24 != 0F) {
        size += 1 + 4;
      }
      if (M31 != 0F) {
        size += 1 + 4;
      }
      if (M32 != 0F) {
        size += 1 + 4;
      }
      if (M33 != 0F) {
        size += 1 + 4;
      }
      if (M34 != 0F) {
        size += 1 + 4;
      }
      if (M41 != 0F) {
        size += 1 + 4;
      }
      if (M42 != 0F) {
        size += 1 + 4;
      }
      if (M43 != 0F) {
        size += 1 + 4;
      }
      if (M44 != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Matrix4x4Packet other) {
      if (other == null) {
        return;
      }
      if (other.M11 != 0F) {
        M11 = other.M11;
      }
      if (other.M12 != 0F) {
        M12 = other.M12;
      }
      if (other.M13 != 0F) {
        M13 = other.M13;
      }
      if (other.M14 != 0F) {
        M14 = other.M14;
      }
      if (other.M21 != 0F) {
        M21 = other.M21;
      }
      if (other.M22 != 0F) {
        M22 = other.M22;
      }
      if (other.M23 != 0F) {
        M23 = other.M23;
      }
      if (other.M24 != 0F) {
        M24 = other.M24;
      }
      if (other.M31 != 0F) {
        M31 = other.M31;
      }
      if (other.M32 != 0F) {
        M32 = other.M32;
      }
      if (other.M33 != 0F) {
        M33 = other.M33;
      }
      if (other.M34 != 0F) {
        M34 = other.M34;
      }
      if (other.M41 != 0F) {
        M41 = other.M41;
      }
      if (other.M42 != 0F) {
        M42 = other.M42;
      }
      if (other.M43 != 0F) {
        M43 = other.M43;
      }
      if (other.M44 != 0F) {
        M44 = other.M44;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            M11 = input.ReadFloat();
            break;
          }
          case 21: {
            M12 = input.ReadFloat();
            break;
          }
          case 29: {
            M13 = input.ReadFloat();
            break;
          }
          case 37: {
            M14 = input.ReadFloat();
            break;
          }
          case 45: {
            M21 = input.ReadFloat();
            break;
          }
          case 53: {
            M22 = input.ReadFloat();
            break;
          }
          case 61: {
            M23 = input.ReadFloat();
            break;
          }
          case 69: {
            M24 = input.ReadFloat();
            break;
          }
          case 77: {
            M31 = input.ReadFloat();
            break;
          }
          case 85: {
            M32 = input.ReadFloat();
            break;
          }
          case 93: {
            M33 = input.ReadFloat();
            break;
          }
          case 101: {
            M34 = input.ReadFloat();
            break;
          }
          case 109: {
            M41 = input.ReadFloat();
            break;
          }
          case 117: {
            M42 = input.ReadFloat();
            break;
          }
          case 125: {
            M43 = input.ReadFloat();
            break;
          }
          case 133: {
            M44 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
