// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message_header.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Physics.Telemetry.Serialised {

  /// <summary>Holder for reflection information generated from message_header.proto</summary>
  public static partial class MessageHeaderReflection {

    #region Descriptor
    /// <summary>File descriptor for message_header.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageHeaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtZXNzYWdlX2hlYWRlci5wcm90bxIQUGh5c2ljc1RlbGVtZXRyeSLaAQoU",
            "TWVzc2FnZUhlYWRlck1lc3NhZ2USDwoHZnJhbWVJZBgBIAEoBRJHCgttZXNz",
            "YWdlVHlwZRgCIAEoDjIyLlBoeXNpY3NUZWxlbWV0cnkuTWVzc2FnZUhlYWRl",
            "ck1lc3NhZ2UuTWVzc2FnZVR5cGUSEAoIZGF0YVNpemUYAyABKAUiVgoLTWVz",
            "c2FnZVR5cGUSEwoPUmlnaWRCb2R5VXBkYXRlEAASEAoMU2hhcGVDcmVhdGVk",
            "EAESEAoMU2hhcGVDaGFuZ2VkEAISDgoKRnJhbWVTdGF0cxADQh+qAhxQaHlz",
            "aWNzLlRlbGVtZXRyeS5TZXJpYWxpc2VkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.MessageHeaderMessage), global::Physics.Telemetry.Serialised.MessageHeaderMessage.Parser, new[]{ "FrameId", "MessageType", "DataSize" }, null, new[]{ typeof(global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MessageHeaderMessage : pb::IMessage<MessageHeaderMessage> {
    private static readonly pb::MessageParser<MessageHeaderMessage> _parser = new pb::MessageParser<MessageHeaderMessage>(() => new MessageHeaderMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageHeaderMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.MessageHeaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageHeaderMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageHeaderMessage(MessageHeaderMessage other) : this() {
      frameId_ = other.frameId_;
      messageType_ = other.messageType_;
      dataSize_ = other.dataSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageHeaderMessage Clone() {
      return new MessageHeaderMessage(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private int frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 2;
    private global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType messageType_ = global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType.RigidBodyUpdate;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "dataSize" field.</summary>
    public const int DataSizeFieldNumber = 3;
    private int dataSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataSize {
      get { return dataSize_; }
      set {
        dataSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageHeaderMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageHeaderMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (MessageType != other.MessageType) return false;
      if (DataSize != other.DataSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (MessageType != global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType.RigidBodyUpdate) hash ^= MessageType.GetHashCode();
      if (DataSize != 0) hash ^= DataSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameId);
      }
      if (MessageType != global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType.RigidBodyUpdate) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MessageType);
      }
      if (DataSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DataSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameId);
      }
      if (MessageType != global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType.RigidBodyUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (DataSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageHeaderMessage other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.MessageType != global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType.RigidBodyUpdate) {
        MessageType = other.MessageType;
      }
      if (other.DataSize != 0) {
        DataSize = other.DataSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadInt32();
            break;
          }
          case 16: {
            MessageType = (global::Physics.Telemetry.Serialised.MessageHeaderMessage.Types.MessageType) input.ReadEnum();
            break;
          }
          case 24: {
            DataSize = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MessageHeaderMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum MessageType {
        [pbr::OriginalName("RigidBodyUpdate")] RigidBodyUpdate = 0,
        [pbr::OriginalName("ShapeCreated")] ShapeCreated = 1,
        [pbr::OriginalName("ShapeChanged")] ShapeChanged = 2,
        [pbr::OriginalName("FrameStats")] FrameStats = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
