// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: shapes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Physics.Telemetry.Serialised {

  /// <summary>Holder for reflection information generated from shapes.proto</summary>
  public static partial class ShapesReflection {

    #region Descriptor
    /// <summary>File descriptor for shapes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShapesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzaGFwZXMucHJvdG8SEFBoeXNpY3NUZWxlbWV0cnkaEGJhc2VfdHlwZXMu",
            "cHJvdG8ikQEKCVNoYXBlQmFzZRIKCgJJZBgBIAEoDRIWCg5oYXNMb2NhbE1h",
            "dHJpeBgCIAEoCBIwCgtsb2NhbE1hdHJpeBgDIAEoCzIbLlBoeXNpY3NUZWxl",
            "bWV0cnkuTWF0cml4NHg0Ei4KCXNoYXBlVHlwZRgEIAEoDjIbLlBoeXNpY3NU",
            "ZWxlbWV0cnkuU2hhcGVUeXBlImUKCE9CQlNoYXBlEikKBGJhc2UYASABKAsy",
            "Gy5QaHlzaWNzVGVsZW1ldHJ5LlNoYXBlQmFzZRIuCgtoYWxmRXh0ZW50cxgC",
            "IAEoCzIZLlBoeXNpY3NUZWxlbWV0cnkuVmVjdG9yMyJRCgxTaGFwZUNyZWF0",
            "ZWQSLgoJc2hhcGVUeXBlGAEgASgOMhsuUGh5c2ljc1RlbGVtZXRyeS5TaGFw",
            "ZVR5cGUSEQoJc2hhcGVTaXplGAIgASgFIlEKDFNoYXBlQ2hhbmdlZBIuCglz",
            "aGFwZVR5cGUYASABKA4yGy5QaHlzaWNzVGVsZW1ldHJ5LlNoYXBlVHlwZRIR",
            "CglzaGFwZVNpemUYAiABKAUqSwoJU2hhcGVUeXBlEgcKA09CQhAAEgoKBlNw",
            "aGVyZRABEggKBENvbmUQAhIOCgpDb252ZXhIdWxsEAMSDwoLVGV0cmFoZWRy",
            "b24QBEIfqgIcUGh5c2ljcy5UZWxlbWV0cnkuU2VyaWFsaXNlZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Physics.Telemetry.Serialised.BaseTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Physics.Telemetry.Serialised.ShapeType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.ShapeBase), global::Physics.Telemetry.Serialised.ShapeBase.Parser, new[]{ "Id", "HasLocalMatrix", "LocalMatrix", "ShapeType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.OBBShape), global::Physics.Telemetry.Serialised.OBBShape.Parser, new[]{ "Base", "HalfExtents" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.ShapeCreated), global::Physics.Telemetry.Serialised.ShapeCreated.Parser, new[]{ "ShapeType", "ShapeSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.ShapeChanged), global::Physics.Telemetry.Serialised.ShapeChanged.Parser, new[]{ "ShapeType", "ShapeSize" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ShapeType {
    [pbr::OriginalName("OBB")] Obb = 0,
    [pbr::OriginalName("Sphere")] Sphere = 1,
    [pbr::OriginalName("Cone")] Cone = 2,
    [pbr::OriginalName("ConvexHull")] ConvexHull = 3,
    [pbr::OriginalName("Tetrahedron")] Tetrahedron = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ShapeBase : pb::IMessage<ShapeBase> {
    private static readonly pb::MessageParser<ShapeBase> _parser = new pb::MessageParser<ShapeBase>(() => new ShapeBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShapeBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.ShapesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeBase(ShapeBase other) : this() {
      id_ = other.id_;
      hasLocalMatrix_ = other.hasLocalMatrix_;
      localMatrix_ = other.localMatrix_ != null ? other.localMatrix_.Clone() : null;
      shapeType_ = other.shapeType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeBase Clone() {
      return new ShapeBase(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "hasLocalMatrix" field.</summary>
    public const int HasLocalMatrixFieldNumber = 2;
    private bool hasLocalMatrix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalMatrix {
      get { return hasLocalMatrix_; }
      set {
        hasLocalMatrix_ = value;
      }
    }

    /// <summary>Field number for the "localMatrix" field.</summary>
    public const int LocalMatrixFieldNumber = 3;
    private global::Physics.Telemetry.Serialised.Matrix4x4 localMatrix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.Matrix4x4 LocalMatrix {
      get { return localMatrix_; }
      set {
        localMatrix_ = value;
      }
    }

    /// <summary>Field number for the "shapeType" field.</summary>
    public const int ShapeTypeFieldNumber = 4;
    private global::Physics.Telemetry.Serialised.ShapeType shapeType_ = global::Physics.Telemetry.Serialised.ShapeType.Obb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeType ShapeType {
      get { return shapeType_; }
      set {
        shapeType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShapeBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShapeBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (HasLocalMatrix != other.HasLocalMatrix) return false;
      if (!object.Equals(LocalMatrix, other.LocalMatrix)) return false;
      if (ShapeType != other.ShapeType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (HasLocalMatrix != false) hash ^= HasLocalMatrix.GetHashCode();
      if (localMatrix_ != null) hash ^= LocalMatrix.GetHashCode();
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) hash ^= ShapeType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (HasLocalMatrix != false) {
        output.WriteRawTag(16);
        output.WriteBool(HasLocalMatrix);
      }
      if (localMatrix_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LocalMatrix);
      }
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ShapeType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (HasLocalMatrix != false) {
        size += 1 + 1;
      }
      if (localMatrix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalMatrix);
      }
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShapeBase other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.HasLocalMatrix != false) {
        HasLocalMatrix = other.HasLocalMatrix;
      }
      if (other.localMatrix_ != null) {
        if (localMatrix_ == null) {
          LocalMatrix = new global::Physics.Telemetry.Serialised.Matrix4x4();
        }
        LocalMatrix.MergeFrom(other.LocalMatrix);
      }
      if (other.ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        ShapeType = other.ShapeType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            HasLocalMatrix = input.ReadBool();
            break;
          }
          case 26: {
            if (localMatrix_ == null) {
              LocalMatrix = new global::Physics.Telemetry.Serialised.Matrix4x4();
            }
            input.ReadMessage(LocalMatrix);
            break;
          }
          case 32: {
            ShapeType = (global::Physics.Telemetry.Serialised.ShapeType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OBBShape : pb::IMessage<OBBShape> {
    private static readonly pb::MessageParser<OBBShape> _parser = new pb::MessageParser<OBBShape>(() => new OBBShape());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OBBShape> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.ShapesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBBShape() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBBShape(OBBShape other) : this() {
      base_ = other.base_ != null ? other.base_.Clone() : null;
      halfExtents_ = other.halfExtents_ != null ? other.halfExtents_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OBBShape Clone() {
      return new OBBShape(this);
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 1;
    private global::Physics.Telemetry.Serialised.ShapeBase base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeBase Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "halfExtents" field.</summary>
    public const int HalfExtentsFieldNumber = 2;
    private global::Physics.Telemetry.Serialised.Vector3 halfExtents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.Vector3 HalfExtents {
      get { return halfExtents_; }
      set {
        halfExtents_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OBBShape);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OBBShape other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Base, other.Base)) return false;
      if (!object.Equals(HalfExtents, other.HalfExtents)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (base_ != null) hash ^= Base.GetHashCode();
      if (halfExtents_ != null) hash ^= HalfExtents.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (base_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Base);
      }
      if (halfExtents_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HalfExtents);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (base_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Base);
      }
      if (halfExtents_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HalfExtents);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OBBShape other) {
      if (other == null) {
        return;
      }
      if (other.base_ != null) {
        if (base_ == null) {
          Base = new global::Physics.Telemetry.Serialised.ShapeBase();
        }
        Base.MergeFrom(other.Base);
      }
      if (other.halfExtents_ != null) {
        if (halfExtents_ == null) {
          HalfExtents = new global::Physics.Telemetry.Serialised.Vector3();
        }
        HalfExtents.MergeFrom(other.HalfExtents);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (base_ == null) {
              Base = new global::Physics.Telemetry.Serialised.ShapeBase();
            }
            input.ReadMessage(Base);
            break;
          }
          case 18: {
            if (halfExtents_ == null) {
              HalfExtents = new global::Physics.Telemetry.Serialised.Vector3();
            }
            input.ReadMessage(HalfExtents);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShapeCreated : pb::IMessage<ShapeCreated> {
    private static readonly pb::MessageParser<ShapeCreated> _parser = new pb::MessageParser<ShapeCreated>(() => new ShapeCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShapeCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.ShapesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeCreated(ShapeCreated other) : this() {
      shapeType_ = other.shapeType_;
      shapeSize_ = other.shapeSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeCreated Clone() {
      return new ShapeCreated(this);
    }

    /// <summary>Field number for the "shapeType" field.</summary>
    public const int ShapeTypeFieldNumber = 1;
    private global::Physics.Telemetry.Serialised.ShapeType shapeType_ = global::Physics.Telemetry.Serialised.ShapeType.Obb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeType ShapeType {
      get { return shapeType_; }
      set {
        shapeType_ = value;
      }
    }

    /// <summary>Field number for the "shapeSize" field.</summary>
    public const int ShapeSizeFieldNumber = 2;
    private int shapeSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShapeSize {
      get { return shapeSize_; }
      set {
        shapeSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShapeCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShapeCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShapeType != other.ShapeType) return false;
      if (ShapeSize != other.ShapeSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) hash ^= ShapeType.GetHashCode();
      if (ShapeSize != 0) hash ^= ShapeSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShapeType);
      }
      if (ShapeSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ShapeSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeType);
      }
      if (ShapeSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShapeSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShapeCreated other) {
      if (other == null) {
        return;
      }
      if (other.ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        ShapeType = other.ShapeType;
      }
      if (other.ShapeSize != 0) {
        ShapeSize = other.ShapeSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShapeType = (global::Physics.Telemetry.Serialised.ShapeType) input.ReadEnum();
            break;
          }
          case 16: {
            ShapeSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShapeChanged : pb::IMessage<ShapeChanged> {
    private static readonly pb::MessageParser<ShapeChanged> _parser = new pb::MessageParser<ShapeChanged>(() => new ShapeChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShapeChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.ShapesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeChanged(ShapeChanged other) : this() {
      shapeType_ = other.shapeType_;
      shapeSize_ = other.shapeSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeChanged Clone() {
      return new ShapeChanged(this);
    }

    /// <summary>Field number for the "shapeType" field.</summary>
    public const int ShapeTypeFieldNumber = 1;
    private global::Physics.Telemetry.Serialised.ShapeType shapeType_ = global::Physics.Telemetry.Serialised.ShapeType.Obb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeType ShapeType {
      get { return shapeType_; }
      set {
        shapeType_ = value;
      }
    }

    /// <summary>Field number for the "shapeSize" field.</summary>
    public const int ShapeSizeFieldNumber = 2;
    private int shapeSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShapeSize {
      get { return shapeSize_; }
      set {
        shapeSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShapeChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShapeChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShapeType != other.ShapeType) return false;
      if (ShapeSize != other.ShapeSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) hash ^= ShapeType.GetHashCode();
      if (ShapeSize != 0) hash ^= ShapeSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ShapeType);
      }
      if (ShapeSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ShapeSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeType);
      }
      if (ShapeSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShapeSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShapeChanged other) {
      if (other == null) {
        return;
      }
      if (other.ShapeType != global::Physics.Telemetry.Serialised.ShapeType.Obb) {
        ShapeType = other.ShapeType;
      }
      if (other.ShapeSize != 0) {
        ShapeSize = other.ShapeSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShapeType = (global::Physics.Telemetry.Serialised.ShapeType) input.ReadEnum();
            break;
          }
          case 16: {
            ShapeSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
