// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: telemetry_file.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Physics.Telemetry.Serialised {

  /// <summary>Holder for reflection information generated from telemetry_file.proto</summary>
  public static partial class TelemetryFileReflection {

    #region Descriptor
    /// <summary>File descriptor for telemetry_file.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TelemetryFileReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChR0ZWxlbWV0cnlfZmlsZS5wcm90bxIQUGh5c2ljc1RlbGVtZXRyeRoQcmln",
            "aWRfYm9keS5wcm90bxoMc2hhcGVzLnByb3RvIl4KE0ZyYW1lU25hcHNob3RQ",
            "YWNrZXQSDwoHZnJhbWVJZBgBIAEoDRI2CgtyaWdpZEJvZGllcxgCIAMoCzIh",
            "LlBoeXNpY3NUZWxlbWV0cnkuUmlnaWRCb2R5UGFja2V0IpwCChlTaGFwZUZy",
            "YW1lSXRlcmF0aW9uUGFja2V0Eg8KB2ZyYW1lSWQYASABKA0SNAoJc2hhcGVU",
            "eXBlGAIgASgOMiEuUGh5c2ljc1RlbGVtZXRyeS5TaGFwZVR5cGVQYWNrZXQS",
            "MgoIb2JiU2hhcGUYAyABKAsyIC5QaHlzaWNzVGVsZW1ldHJ5Lk9iYlNoYXBl",
            "UGFja2V0EkIKEHRldHJhaGVkcm9uU2hhcGUYBCABKAsyKC5QaHlzaWNzVGVs",
            "ZW1ldHJ5LlRldHJhaGVkcm9uU2hhcGVQYWNrZXQSQAoPY29udmV4SHVsbFNo",
            "YXBlGAUgASgLMicuUGh5c2ljc1RlbGVtZXRyeS5Db252ZXhIdWxsU2hhcGVQ",
            "YWNrZXQiTgoPU2hhcGVEYXRhUGFja2V0EjsKBnNoYXBlcxgBIAMoCzIrLlBo",
            "eXNpY3NUZWxlbWV0cnkuU2hhcGVGcmFtZUl0ZXJhdGlvblBhY2tldCJ+Cg9G",
            "cmFtZURhdGFQYWNrZXQSNQoGZnJhbWVzGAEgAygLMiUuUGh5c2ljc1RlbGVt",
            "ZXRyeS5GcmFtZVNuYXBzaG90UGFja2V0EjQKCXNoYXBlRGF0YRgCIAEoCzIh",
            "LlBoeXNpY3NUZWxlbWV0cnkuU2hhcGVEYXRhUGFja2V0Qh+qAhxQaHlzaWNz",
            "LlRlbGVtZXRyeS5TZXJpYWxpc2VkYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Physics.Telemetry.Serialised.RigidBodyReflection.Descriptor, global::Physics.Telemetry.Serialised.ShapesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.FrameSnapshotPacket), global::Physics.Telemetry.Serialised.FrameSnapshotPacket.Parser, new[]{ "FrameId", "RigidBodies" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket), global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket.Parser, new[]{ "FrameId", "ShapeType", "ObbShape", "TetrahedronShape", "ConvexHullShape" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.ShapeDataPacket), global::Physics.Telemetry.Serialised.ShapeDataPacket.Parser, new[]{ "Shapes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Physics.Telemetry.Serialised.FrameDataPacket), global::Physics.Telemetry.Serialised.FrameDataPacket.Parser, new[]{ "Frames", "ShapeData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FrameSnapshotPacket : pb::IMessage<FrameSnapshotPacket> {
    private static readonly pb::MessageParser<FrameSnapshotPacket> _parser = new pb::MessageParser<FrameSnapshotPacket>(() => new FrameSnapshotPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrameSnapshotPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.TelemetryFileReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameSnapshotPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameSnapshotPacket(FrameSnapshotPacket other) : this() {
      frameId_ = other.frameId_;
      rigidBodies_ = other.rigidBodies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameSnapshotPacket Clone() {
      return new FrameSnapshotPacket(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private uint frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "rigidBodies" field.</summary>
    public const int RigidBodiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Physics.Telemetry.Serialised.RigidBodyPacket> _repeated_rigidBodies_codec
        = pb::FieldCodec.ForMessage(18, global::Physics.Telemetry.Serialised.RigidBodyPacket.Parser);
    private readonly pbc::RepeatedField<global::Physics.Telemetry.Serialised.RigidBodyPacket> rigidBodies_ = new pbc::RepeatedField<global::Physics.Telemetry.Serialised.RigidBodyPacket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Physics.Telemetry.Serialised.RigidBodyPacket> RigidBodies {
      get { return rigidBodies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrameSnapshotPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrameSnapshotPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if(!rigidBodies_.Equals(other.rigidBodies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      hash ^= rigidBodies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FrameId);
      }
      rigidBodies_.WriteTo(output, _repeated_rigidBodies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
      }
      size += rigidBodies_.CalculateSize(_repeated_rigidBodies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrameSnapshotPacket other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      rigidBodies_.Add(other.rigidBodies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadUInt32();
            break;
          }
          case 18: {
            rigidBodies_.AddEntriesFrom(input, _repeated_rigidBodies_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShapeFrameIterationPacket : pb::IMessage<ShapeFrameIterationPacket> {
    private static readonly pb::MessageParser<ShapeFrameIterationPacket> _parser = new pb::MessageParser<ShapeFrameIterationPacket>(() => new ShapeFrameIterationPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShapeFrameIterationPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.TelemetryFileReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeFrameIterationPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeFrameIterationPacket(ShapeFrameIterationPacket other) : this() {
      frameId_ = other.frameId_;
      shapeType_ = other.shapeType_;
      obbShape_ = other.obbShape_ != null ? other.obbShape_.Clone() : null;
      tetrahedronShape_ = other.tetrahedronShape_ != null ? other.tetrahedronShape_.Clone() : null;
      convexHullShape_ = other.convexHullShape_ != null ? other.convexHullShape_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeFrameIterationPacket Clone() {
      return new ShapeFrameIterationPacket(this);
    }

    /// <summary>Field number for the "frameId" field.</summary>
    public const int FrameIdFieldNumber = 1;
    private uint frameId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint FrameId {
      get { return frameId_; }
      set {
        frameId_ = value;
      }
    }

    /// <summary>Field number for the "shapeType" field.</summary>
    public const int ShapeTypeFieldNumber = 2;
    private global::Physics.Telemetry.Serialised.ShapeTypePacket shapeType_ = global::Physics.Telemetry.Serialised.ShapeTypePacket.Obb;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeTypePacket ShapeType {
      get { return shapeType_; }
      set {
        shapeType_ = value;
      }
    }

    /// <summary>Field number for the "obbShape" field.</summary>
    public const int ObbShapeFieldNumber = 3;
    private global::Physics.Telemetry.Serialised.ObbShapePacket obbShape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ObbShapePacket ObbShape {
      get { return obbShape_; }
      set {
        obbShape_ = value;
      }
    }

    /// <summary>Field number for the "tetrahedronShape" field.</summary>
    public const int TetrahedronShapeFieldNumber = 4;
    private global::Physics.Telemetry.Serialised.TetrahedronShapePacket tetrahedronShape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.TetrahedronShapePacket TetrahedronShape {
      get { return tetrahedronShape_; }
      set {
        tetrahedronShape_ = value;
      }
    }

    /// <summary>Field number for the "convexHullShape" field.</summary>
    public const int ConvexHullShapeFieldNumber = 5;
    private global::Physics.Telemetry.Serialised.ConvexHullShapePacket convexHullShape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ConvexHullShapePacket ConvexHullShape {
      get { return convexHullShape_; }
      set {
        convexHullShape_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShapeFrameIterationPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShapeFrameIterationPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameId != other.FrameId) return false;
      if (ShapeType != other.ShapeType) return false;
      if (!object.Equals(ObbShape, other.ObbShape)) return false;
      if (!object.Equals(TetrahedronShape, other.TetrahedronShape)) return false;
      if (!object.Equals(ConvexHullShape, other.ConvexHullShape)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameId != 0) hash ^= FrameId.GetHashCode();
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeTypePacket.Obb) hash ^= ShapeType.GetHashCode();
      if (obbShape_ != null) hash ^= ObbShape.GetHashCode();
      if (tetrahedronShape_ != null) hash ^= TetrahedronShape.GetHashCode();
      if (convexHullShape_ != null) hash ^= ConvexHullShape.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(FrameId);
      }
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeTypePacket.Obb) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ShapeType);
      }
      if (obbShape_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ObbShape);
      }
      if (tetrahedronShape_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TetrahedronShape);
      }
      if (convexHullShape_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ConvexHullShape);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(FrameId);
      }
      if (ShapeType != global::Physics.Telemetry.Serialised.ShapeTypePacket.Obb) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ShapeType);
      }
      if (obbShape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObbShape);
      }
      if (tetrahedronShape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TetrahedronShape);
      }
      if (convexHullShape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConvexHullShape);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShapeFrameIterationPacket other) {
      if (other == null) {
        return;
      }
      if (other.FrameId != 0) {
        FrameId = other.FrameId;
      }
      if (other.ShapeType != global::Physics.Telemetry.Serialised.ShapeTypePacket.Obb) {
        ShapeType = other.ShapeType;
      }
      if (other.obbShape_ != null) {
        if (obbShape_ == null) {
          ObbShape = new global::Physics.Telemetry.Serialised.ObbShapePacket();
        }
        ObbShape.MergeFrom(other.ObbShape);
      }
      if (other.tetrahedronShape_ != null) {
        if (tetrahedronShape_ == null) {
          TetrahedronShape = new global::Physics.Telemetry.Serialised.TetrahedronShapePacket();
        }
        TetrahedronShape.MergeFrom(other.TetrahedronShape);
      }
      if (other.convexHullShape_ != null) {
        if (convexHullShape_ == null) {
          ConvexHullShape = new global::Physics.Telemetry.Serialised.ConvexHullShapePacket();
        }
        ConvexHullShape.MergeFrom(other.ConvexHullShape);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameId = input.ReadUInt32();
            break;
          }
          case 16: {
            ShapeType = (global::Physics.Telemetry.Serialised.ShapeTypePacket) input.ReadEnum();
            break;
          }
          case 26: {
            if (obbShape_ == null) {
              ObbShape = new global::Physics.Telemetry.Serialised.ObbShapePacket();
            }
            input.ReadMessage(ObbShape);
            break;
          }
          case 34: {
            if (tetrahedronShape_ == null) {
              TetrahedronShape = new global::Physics.Telemetry.Serialised.TetrahedronShapePacket();
            }
            input.ReadMessage(TetrahedronShape);
            break;
          }
          case 42: {
            if (convexHullShape_ == null) {
              ConvexHullShape = new global::Physics.Telemetry.Serialised.ConvexHullShapePacket();
            }
            input.ReadMessage(ConvexHullShape);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShapeDataPacket : pb::IMessage<ShapeDataPacket> {
    private static readonly pb::MessageParser<ShapeDataPacket> _parser = new pb::MessageParser<ShapeDataPacket>(() => new ShapeDataPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShapeDataPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.TelemetryFileReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeDataPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeDataPacket(ShapeDataPacket other) : this() {
      shapes_ = other.shapes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShapeDataPacket Clone() {
      return new ShapeDataPacket(this);
    }

    /// <summary>Field number for the "shapes" field.</summary>
    public const int ShapesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket> _repeated_shapes_codec
        = pb::FieldCodec.ForMessage(10, global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket.Parser);
    private readonly pbc::RepeatedField<global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket> shapes_ = new pbc::RepeatedField<global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Physics.Telemetry.Serialised.ShapeFrameIterationPacket> Shapes {
      get { return shapes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShapeDataPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShapeDataPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shapes_.Equals(other.shapes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shapes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      shapes_.WriteTo(output, _repeated_shapes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shapes_.CalculateSize(_repeated_shapes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShapeDataPacket other) {
      if (other == null) {
        return;
      }
      shapes_.Add(other.shapes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shapes_.AddEntriesFrom(input, _repeated_shapes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FrameDataPacket : pb::IMessage<FrameDataPacket> {
    private static readonly pb::MessageParser<FrameDataPacket> _parser = new pb::MessageParser<FrameDataPacket>(() => new FrameDataPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrameDataPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Physics.Telemetry.Serialised.TelemetryFileReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameDataPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameDataPacket(FrameDataPacket other) : this() {
      frames_ = other.frames_.Clone();
      shapeData_ = other.shapeData_ != null ? other.shapeData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrameDataPacket Clone() {
      return new FrameDataPacket(this);
    }

    /// <summary>Field number for the "frames" field.</summary>
    public const int FramesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Physics.Telemetry.Serialised.FrameSnapshotPacket> _repeated_frames_codec
        = pb::FieldCodec.ForMessage(10, global::Physics.Telemetry.Serialised.FrameSnapshotPacket.Parser);
    private readonly pbc::RepeatedField<global::Physics.Telemetry.Serialised.FrameSnapshotPacket> frames_ = new pbc::RepeatedField<global::Physics.Telemetry.Serialised.FrameSnapshotPacket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Physics.Telemetry.Serialised.FrameSnapshotPacket> Frames {
      get { return frames_; }
    }

    /// <summary>Field number for the "shapeData" field.</summary>
    public const int ShapeDataFieldNumber = 2;
    private global::Physics.Telemetry.Serialised.ShapeDataPacket shapeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Physics.Telemetry.Serialised.ShapeDataPacket ShapeData {
      get { return shapeData_; }
      set {
        shapeData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrameDataPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrameDataPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!frames_.Equals(other.frames_)) return false;
      if (!object.Equals(ShapeData, other.ShapeData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= frames_.GetHashCode();
      if (shapeData_ != null) hash ^= ShapeData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      frames_.WriteTo(output, _repeated_frames_codec);
      if (shapeData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ShapeData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frames_.CalculateSize(_repeated_frames_codec);
      if (shapeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShapeData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrameDataPacket other) {
      if (other == null) {
        return;
      }
      frames_.Add(other.frames_);
      if (other.shapeData_ != null) {
        if (shapeData_ == null) {
          ShapeData = new global::Physics.Telemetry.Serialised.ShapeDataPacket();
        }
        ShapeData.MergeFrom(other.ShapeData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frames_.AddEntriesFrom(input, _repeated_frames_codec);
            break;
          }
          case 18: {
            if (shapeData_ == null) {
              ShapeData = new global::Physics.Telemetry.Serialised.ShapeDataPacket();
            }
            input.ReadMessage(ShapeData);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
